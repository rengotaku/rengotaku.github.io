<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on Vegetable Programing</title>
    <link>https://rengotaku.github.io/tags/git/</link>
    <description>Recent content in git on Vegetable Programing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja_JP</language>
    <copyright>©2018-2020 Vegetable Programing.</copyright>
    <lastBuildDate>Mon, 09 Nov 2020 14:29:21 +0900</lastBuildDate>
    
	<atom:link href="https://rengotaku.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>cherry-pickをマージコミット、各々のコミットでどのような差分が出るか？</title>
      <link>https://rengotaku.github.io/posts/258130eb-99da-4bcb-ab9f-e50e0813c6cb/</link>
      <pubDate>Mon, 09 Nov 2020 14:29:21 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/258130eb-99da-4bcb-ab9f-e50e0813c6cb/</guid>
      <description>概要 既にマージ済みのはずなのに差分として表示された。 推測によると、マージコミットをチェリーピックしているので発生するらしい。 多分、差分は見え</description>
    </item>
    
    <item>
      <title>gitignoreで決まったファイルのみ許容する書き方</title>
      <link>https://rengotaku.github.io/posts/0da10113-c501-4846-82ca-ceccfa0efb81/</link>
      <pubDate>Thu, 20 Aug 2020 18:29:06 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/0da10113-c501-4846-82ca-ceccfa0efb81/</guid>
      <description>working-memo/.gitignore at master · kanagawa41/working-memo * !bin !bin/*.sh</description>
    </item>
    
    <item>
      <title>gitで消えたファイルのコミットIDを特定する</title>
      <link>https://rengotaku.github.io/posts/d41bf80a-8abb-4491-8aa2-b7172412c6e7/</link>
      <pubDate>Wed, 22 Jan 2020 10:40:10 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/d41bf80a-8abb-4491-8aa2-b7172412c6e7/</guid>
      <description>git log でファイルも表示しグレップする $ git log --stat | grep -B 8 hoge.rb | less -B X は要調整 git log で変更・追加されたファイルを表示する - yuumi3のお仕事日記 gre</description>
    </item>
    
    <item>
      <title>submoduleをcloneする</title>
      <link>https://rengotaku.github.io/posts/1c62d434-9d02-432d-a4c6-e2621527bb61/</link>
      <pubDate>Tue, 21 Jan 2020 12:43:43 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/1c62d434-9d02-432d-a4c6-e2621527bb61/</guid>
      <description>clone時 recursive を付与 $ git clone --recursive git://github.com/foo/bar.git 既にcloneしている $ git submodule update --init --recursive gitでクローンと同時にサブモジュールを初期化、アップデートする – IsaB</description>
    </item>
    
    <item>
      <title>マージ済みのbranchを一括削除</title>
      <link>https://rengotaku.github.io/posts/00fe706c-2842-4dae-b2de-1a727b11e09c/</link>
      <pubDate>Tue, 10 Sep 2019 14:57:24 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/00fe706c-2842-4dae-b2de-1a727b11e09c/</guid>
      <description>$ git branch --merged|egrep -v &#39;\*|develop|master&#39;|xargs git branch -d Gitでマージ済みブランチを一括削除 - Qiita</description>
    </item>
    
    <item>
      <title>submoduleの変更が元に戻せない</title>
      <link>https://rengotaku.github.io/posts/64c2f304-032b-4b62-9d59-be6c306fe402/</link>
      <pubDate>Wed, 17 Jul 2019 15:08:54 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/64c2f304-032b-4b62-9d59-be6c306fe402/</guid>
      <description>事象 checkout しても resetしても、cleanな状態にならない $ git diff diff --git a/playbooks/roles/mysql b/playbooks/roles/mysql index hoge1..hoge2 160000 --- a/playbooks/roles/mysql +++ b/playbooks/roles/mysql @@ -1 +1 @@ -Subproject commit hoge1 +Subproject commit hoge2 修正したが、修正を元に戻しすと稀に発</description>
    </item>
    
    <item>
      <title>CircleCIのCheckout codeで落ちる</title>
      <link>https://rengotaku.github.io/posts/1306a51e-f82f-448a-90c5-396f42dff167/</link>
      <pubDate>Fri, 12 Jul 2019 17:13:58 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/1306a51e-f82f-448a-90c5-396f42dff167/</guid>
      <description>原因 feature/AAA というブランチでコミットしていたが、コミットした後に、 feature/BBB に変更した為、 feature/BBB のブランチでPRが作成されているにも関わらず、 Checkout code で feature/AAA が指定さ</description>
    </item>
    
    <item>
      <title>いつもと違うアカウントのPCで自分のリポジトリにpushしたい</title>
      <link>https://rengotaku.github.io/posts/8c3152ba-44d9-4e8f-8183-34a67606c524/</link>
      <pubDate>Tue, 09 Jul 2019 18:48:33 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/8c3152ba-44d9-4e8f-8183-34a67606c524/</guid>
      <description>事象 別PCで、グローバルにいつもと違うユーザを使用しており、 プライベートのリポジトリにpushしようとしたらエラーが発生する。 $ git push -u origin master ERROR:</description>
    </item>
    
    <item>
      <title>コンフリクトした際の対応</title>
      <link>https://rengotaku.github.io/posts/799718e7-551a-433b-9578-4a6c8277549d/</link>
      <pubDate>Thu, 27 Jun 2019 11:48:25 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/799718e7-551a-433b-9578-4a6c8277549d/</guid>
      <description>上の方は、コンフリクトしているファイルを別名でブランチを切る手順です。 コンフリクトファイルのみを消したい場合は、半ばくらいから参考にして下さ</description>
    </item>
    
    <item>
      <title>コミット入れ替えたい</title>
      <link>https://rengotaku.github.io/posts/4e44817f-d5d0-481a-930f-6a591fb92f6f/</link>
      <pubDate>Thu, 27 Jun 2019 11:44:16 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/4e44817f-d5d0-481a-930f-6a591fb92f6f/</guid>
      <description>問題点 994bb38 と 66790c3 を一緒にプッシュしてしまった。 要 望 66790c3 分をプッシュ結果から削除したい。 解決策 994bb38 と 66790c3 のコミットを入れ替えて、最新のコミットを 994b</description>
    </item>
    
    <item>
      <title>一括でコンフリクトを解消したい</title>
      <link>https://rengotaku.github.io/posts/e9d32fb5-3dd0-48fb-924e-cfcafe27f99f/</link>
      <pubDate>Thu, 21 Feb 2019 15:19:30 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/e9d32fb5-3dd0-48fb-924e-cfcafe27f99f/</guid>
      <description>$ grep -lr &#39;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&#39; . | grep -v &#39;./.git&#39; | xargs git checkout --ours or $ grep -lr &#39;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&#39; . | grep -v &#39;./.git&#39; | xargs git checkout --theirs &#39;./.git&#39; を入れているのは、 &#39;./.git/objects/pack/pack-xxx.pack&#39; のようなファイルを除外している Git resolve conflict using &amp;ndash;ours/&amp;ndash;theirs for all files - Stack Overflow</description>
    </item>
    
    <item>
      <title>Gitで特定ファイルの変更履歴をみる</title>
      <link>https://rengotaku.github.io/posts/7eb1b9cd-657c-45a0-86dd-4f36db5e05ea/</link>
      <pubDate>Thu, 07 Feb 2019 18:51:04 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/7eb1b9cd-657c-45a0-86dd-4f36db5e05ea/</guid>
      <description>$ git log -p app/view/hoge/show.html.erb Gitで特定ファイルの変更履歴をみる - Bye Bye Moore</description>
    </item>
    
    <item>
      <title>履歴を追いやすいリッチクライアント「tig」</title>
      <link>https://rengotaku.github.io/posts/76e03cef-6cc8-44fb-a5a2-f8fa7ab9f0f0/</link>
      <pubDate>Tue, 05 Feb 2019 11:38:32 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/76e03cef-6cc8-44fb-a5a2-f8fa7ab9f0f0/</guid>
      <description>インストール mac $ brew install tig CentOS $ yum install tig コマンド 履歴をリッチなビューで確認する $ tig ファイルの各行が誰の何のコミットか分かる $ tig blame file_name gitクライアント</description>
    </item>
    
    <item>
      <title>gitのssh設定</title>
      <link>https://rengotaku.github.io/posts/6024ced5-1778-4d71-828d-82b192f5a3eb/</link>
      <pubDate>Sat, 01 Dec 2018 13:26:59 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/6024ced5-1778-4d71-828d-82b192f5a3eb/</guid>
      <description>秘密・公開鍵の作成 $ cd ~/.ssh $ ssh-keygen -t rsa Generating public/private rsa key pair. Enter file in which to save the key (/Users/(username)/.ssh/id_rsa):id_rsa_for_git Enter passphrase (empty for no passphrase): Enter same passphrase again: githubにてkeyの登録 settings にて行う ssh configの作成 $</description>
    </item>
    
    <item>
      <title>git push を引数なしで実行したい</title>
      <link>https://rengotaku.github.io/posts/2d8a233a-4538-4c4b-8687-a784c9da7012/</link>
      <pubDate>Wed, 21 Nov 2018 15:28:01 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/2d8a233a-4538-4c4b-8687-a784c9da7012/</guid>
      <description>pushする際に -u をつける $ git push -u origin master set-upstreamを確認 $ git branch -vv development 4dc13cd3 [origin/development: behind 72] Merge pull request #0000 from xxxx/feature/xxxx git pull を &amp;ndash;set-upstream-to で引数無しで実行可能にする - Qiita</description>
    </item>
    
    <item>
      <title>過去のコミット内容を変更</title>
      <link>https://rengotaku.github.io/posts/702bff51-5cd7-4ecf-bcf7-19702860ea0a/</link>
      <pubDate>Mon, 12 Nov 2018 16:11:01 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/702bff51-5cd7-4ecf-bcf7-19702860ea0a/</guid>
      <description>修正前後 12817e8bd (HEAD) 変更しないよ b99274780 before 5820bde2e 変更しないよ 0a92dcf8d (HEAD) 変更しないよ 581817819 after 5820bde2e 変更しないよ 作業 rebase -i [変更をしたいコミットより一つ先] $ rebase -i 5820bde2e pick b99274780 before pick 12817e8bd 変更</description>
    </item>
    
    <item>
      <title>PR単位のマージをリバートする</title>
      <link>https://rengotaku.github.io/posts/132a20a0-1b47-4c92-b489-bd506a5d26be/</link>
      <pubDate>Tue, 06 Nov 2018 18:05:58 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/132a20a0-1b47-4c92-b489-bd506a5d26be/</guid>
      <description>git revert -m 1 [commit_id] を使用する。 $ git log --oneline | grep feature/marged_branch 85059095e Merge pull request #0002 in XXXX/XXXX from feature/marged_branch to feature/development 1526deebf Merge pull request #0001 in XXXX/XXXX from feature/marged_branch to feature/development $ git revert -m 1 85059095e $ git revert -m 1 1526deebf GitでMerge CommitをRe</description>
    </item>
    
    <item>
      <title>リネーム後のファイルの履歴を追いたい（中身を確認したい）</title>
      <link>https://rengotaku.github.io/posts/0b100e09-a7ca-4ea2-b41a-9c9b1f5a0da3/</link>
      <pubDate>Fri, 02 Nov 2018 15:42:40 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/0b100e09-a7ca-4ea2-b41a-9c9b1f5a0da3/</guid>
      <description>該当のファイルのリネーム以前の名前を取得 $ git log --name-only --follow apps/after.rb commit 7ea918a... Author: ryuji &amp;lt;ryuji@ryuji.com&amp;gt; Date: Mon Apr 24 17:13:16 2017 +0900 リネーム apps/before.rb # &amp;lt;= リネーム前のファイル名 特定リビジョンのファイルの内</description>
    </item>
    
    <item>
      <title>ファイル名のみ表示</title>
      <link>https://rengotaku.github.io/posts/fd523f94-60ca-46e3-b969-0309793f7426/</link>
      <pubDate>Thu, 11 Oct 2018 17:29:43 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/fd523f94-60ca-46e3-b969-0309793f7426/</guid>
      <description>$ git log --name-only git diff でファイル名のみ表示する</description>
    </item>
    
    <item>
      <title>フォルダのみを管理したい</title>
      <link>https://rengotaku.github.io/posts/60660917-a296-498a-afa4-37fa30d920f5/</link>
      <pubDate>Fri, 05 Oct 2018 12:04:12 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/60660917-a296-498a-afa4-37fa30d920f5/</guid>
      <description>db/* !.keep keepの位置は下に持ってくる必要がある Gitで空のディレクトリを管理する方法の復習｜リスティング広告の運用代行ならカルテットコミュニケ</description>
    </item>
    
    <item>
      <title>間違ってコミットしていたファイルを歴史から全消去</title>
      <link>https://rengotaku.github.io/posts/af3885d5-0e0e-47d5-a81d-46b7f28ffc4f/</link>
      <pubDate>Thu, 21 Jun 2018 11:44:15 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/af3885d5-0e0e-47d5-a81d-46b7f28ffc4f/</guid>
      <description>$ git filter-branch -f --index-filter &#39;git rm --cached --ignore-unmatch ファイル名&#39; HEAD [gitでファイルの存在をなかったことにする - baronyan&amp;rsquo;s blog|http://baronyan.hatenadiary.com/entry/2014/07/14/152517]</description>
    </item>
    
    <item>
      <title>ギットのdiffモード時の操作</title>
      <link>https://rengotaku.github.io/posts/36dd53c3-fc57-47fd-b83a-18ee08f441cd/</link>
      <pubDate>Mon, 04 Jun 2018 18:45:54 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/36dd53c3-fc57-47fd-b83a-18ee08f441cd/</guid>
      <description>次のライン: エンター 次のページ: スペース 前のページ: w git - How do I navigate in the results of Diff - Stack Overflow</description>
    </item>
    
    <item>
      <title>Gitコマンドをtab補完</title>
      <link>https://rengotaku.github.io/posts/114739bf-71de-4e5f-85a6-4ad339116184/</link>
      <pubDate>Wed, 02 May 2018 14:46:26 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/114739bf-71de-4e5f-85a6-4ad339116184/</guid>
      <description>ファイルを見るける $ sudo find / -name git-completion.bash =&amp;gt; /Library/Developer/CommandLineTools/usr/share/git-core/git-completion.bash bashrcにパスを追記する $ vi ~/.bashrc ----------------- ... source /Library/Developer/CommandLineTools/usr/share/git-core/git-completion.bash 【2ステップ】Gitコマンドでtab補完を有効にする - Qiita</description>
    </item>
    
    <item>
      <title>.gitignoreに書かずに、更新を無視する</title>
      <link>https://rengotaku.github.io/posts/2a068414-a89e-4ff2-af7e-7421d0fb9236/</link>
      <pubDate>Fri, 27 Apr 2018 18:49:52 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/2a068414-a89e-4ff2-af7e-7421d0fb9236/</guid>
      <description>GIT_PROJECT_ROOT/.git/info/exclude に除外条件を記載。 config、database情報をローカルにカスタマイズする必要がある時に便利。 複数人で開発するとき git 管理から外す指定</description>
    </item>
    
    <item>
      <title>リポジトリーにpushできない</title>
      <link>https://rengotaku.github.io/posts/ebbdefc9-8f7c-4146-8e78-7dc2a6bf43f5/</link>
      <pubDate>Fri, 27 Apr 2018 18:03:21 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/ebbdefc9-8f7c-4146-8e78-7dc2a6bf43f5/</guid>
      <description>事象 pushしようとして、下記のエラーが発生したら、 書き込み権限がないようです。 $ git push origin test ERROR: Repository not found. fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists. 対</description>
    </item>
    
    <item>
      <title>GITHUBでLGTM</title>
      <link>https://rengotaku.github.io/posts/34c318c8-8242-423e-a08d-6ab00da4357e/</link>
      <pubDate>Tue, 24 Apr 2018 10:09:24 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/34c318c8-8242-423e-a08d-6ab00da4357e/</guid>
      <description>LGTM (Looks Good To Me)をするには ![LGTM](画像URL) をコメントに記載する LGTM - Chrome ウェブストアを使えば画像集めが楽になる。</description>
    </item>
    
  </channel>
</rss>