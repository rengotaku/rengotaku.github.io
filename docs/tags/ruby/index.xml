<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ruby on Vegetable Programing</title>
    <link>https://rengotaku.github.io/tags/ruby/</link>
    <description>Recent content in ruby on Vegetable Programing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja_JP</language>
    <copyright>©2018-2020 Vegetable Programing.</copyright>
    <lastBuildDate>Thu, 06 May 2021 18:12:31 +0900</lastBuildDate><atom:link href="https://rengotaku.github.io/tags/ruby/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using scope as specifying API version in path</title>
      <link>https://rengotaku.github.io/posts/8d02a24b-4045-411c-8816-1c07f72f3e4d/</link>
      <pubDate>Thu, 06 May 2021 18:12:31 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/8d02a24b-4045-411c-8816-1c07f72f3e4d/</guid>
      <description>Resolution Rails 5 Routes: Scope vs Namespace - Devblast namespace :service do scope :v1 do resource :product do get &amp;#34;/&amp;#34;, to: &amp;#34;v1/product#hoge&amp;#34; Motivation If don&amp;rsquo;t expect not to change some APIs behavior even its version increase, you should use scoep instead of namespace. namespace :service do namespace :v1 do resource :product do get &amp;#34;/&amp;#34;, to: &amp;#34;product#hoge&amp;#34; Generated path is service_v1_product GET /service/v1/product(.:format) service/v1/product#hoge.</description>
    </item>
    
    <item>
      <title>bundle config設定時に--localを使用する際の注意点</title>
      <link>https://rengotaku.github.io/posts/1a278cf4-2da6-4dc9-ad95-e4ef511a272e/</link>
      <pubDate>Wed, 14 Apr 2021 16:36:39 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/1a278cf4-2da6-4dc9-ad95-e4ef511a272e/</guid>
      <description>解決 bundle config set without &#39;development test&#39; --local BUNDLE_WITHOUT: &amp;quot;development:test&amp;quot; 事象 bundle config set without &#39;development test&#39; --localだと.bundle/configに下記のように記されてしまう。 BUNDLE_SET: &amp;quot;without development test&amp;quot;</description>
    </item>
    
    <item>
      <title>HASHのDIFFを取る</title>
      <link>https://rengotaku.github.io/posts/7d29c061-fee9-4f20-8e13-1663c5e00e4d/</link>
      <pubDate>Tue, 13 Apr 2021 16:46:42 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/7d29c061-fee9-4f20-8e13-1663c5e00e4d/</guid>
      <description>解決 ruby - How do I compare two hashes? - Stack Overflow より下記 hash3.to_a - hash1.to_a # =&amp;gt; [[&amp;#34;c&amp;#34;, 3]] if (hash3.size &amp;gt; hash1.size) difference = hash3.to_a - hash1.to_a else difference = hash1.to_a - hash3.to_a end Hash[*difference.flatten] # =&amp;gt; {&amp;#34;c&amp;#34;=&amp;gt;3}</description>
    </item>
    
    <item>
      <title>SidekiqのRecurring Jobsの画面に表示される項目を取得したい</title>
      <link>https://rengotaku.github.io/posts/30c4cd33-6512-48f0-8091-0e9a123c46d7/</link>
      <pubDate>Tue, 23 Mar 2021 13:49:40 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/30c4cd33-6512-48f0-8091-0e9a123c46d7/</guid>
      <description>解決 sidekiq-scheduler/job_presenter.rb at master · moove-it/sidekiq-scheduler · GitHub を参考 schedules = Sidekiq.schedule! service_schedules = schedules.select { |key, value| true if something compare } presented_jobs = SidekiqScheduler::JobPresenter.build_collection(service_schedules) presented_jobs[0].next_time presented_jobs[0].last_time presented_jobs[0].enabled? presented_jobs[0].queue</description>
    </item>
    
    <item>
      <title>bundle updateでエラーが発生する</title>
      <link>https://rengotaku.github.io/posts/7ca95d58-467e-4005-9046-b2abfe6efd16/</link>
      <pubDate>Wed, 17 Feb 2021 10:56:38 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/7ca95d58-467e-4005-9046-b2abfe6efd16/</guid>
      <description>解決 https://github.com/rubygems/rubygems/issues/4380#issuecomment-780128796 より、bundlerのバージョンを指定する。 gem install bundler -v 2.2.9 事象 突如、下記のエラーが発生した。 /usr/local/bundle/gems/bundler-2.2.10/lib/bundler/resolver.rb:470:in `block in validate_resolved_specs!&#39;: The gem &#39;capistrano&#39; was found in multiple relevant sources. (Bundler::SecurityError) * rubygems repository http://hoge.example/ or installed locally * rubygems</description>
    </item>
    
    <item>
      <title>自前のバリデーションを作成する</title>
      <link>https://rengotaku.github.io/posts/3aad0181-20b1-4f3c-ab4f-0d78fcab067c/</link>
      <pubDate>Wed, 03 Feb 2021 18:33:47 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/3aad0181-20b1-4f3c-ab4f-0d78fcab067c/</guid>
      <description>解決 How to Implement Custom ActiveRecord Validations | by Moses Ogwo | Better Programming | Medium の3. Custom Validators (for an Attribute)を参考 concernsに定義 app/models/concerns/type_validator.rb class TypeValidator &amp;lt; ActiveModel::EachValidator def validate_each(record, attribute, value) unless (value === &amp;#34;wood&amp;#34;) || (value === &amp;#34;iron&amp;#34;) # 好きな条</description>
    </item>
    
    <item>
      <title>rubyでoffestを実装してみた</title>
      <link>https://rengotaku.github.io/posts/1c5e79a3-ab8c-4ecd-96e0-187a6b536e09/</link>
      <pubDate>Tue, 26 Jan 2021 11:21:25 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/1c5e79a3-ab8c-4ecd-96e0-187a6b536e09/</guid>
      <description>Source def offset(size, chunk_num = 5000) (0...((size / chunk_num) + (size % chunk_num &amp;gt; 0 ? 1 : 0))).to_a.each do |count| start_cnt = chunk_num * count end_cnt = chunk_num * count + chunk_num - 1 end_cnt = size - 1 if end_cnt &amp;gt; size - 1 yield start_cnt, end_cnt end end Usage offset(10000) {|s, e| puts &amp;#34;#{s},#{e}&amp;#34;} 0,4999 5000,9999 offset(10001) {|s, e| puts &amp;#34;#{s},#{e}&amp;#34;} 0,4999 5000,9999 10000,10000</description>
    </item>
    
    <item>
      <title>railsの環境変数を変えたい</title>
      <link>https://rengotaku.github.io/posts/4482a32b-fc91-4243-ab80-fb6f36e3770f/</link>
      <pubDate>Tue, 27 Oct 2020 14:05:23 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/4482a32b-fc91-4243-ab80-fb6f36e3770f/</guid>
      <description>Rails.env.define_singleton_method(:trial?, -&amp;gt; { true }) rspecを使用の際は、Rails.env.stub(:development? =&amp;gt; true) で良い rspec2 - mock Rails.env.development? using rspec - Stack Overflow</description>
    </item>
    
    <item>
      <title>ローカルで開発でコントローラーなどの修正が反映されない</title>
      <link>https://rengotaku.github.io/posts/bda229f2-f7c4-4ba2-9881-b3eabe75b0b3/</link>
      <pubDate>Wed, 07 Oct 2020 15:19:26 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/bda229f2-f7c4-4ba2-9881-b3eabe75b0b3/</guid>
      <description>解決 config/environments/development.rb の下記をコメントアウトしてサーバを再起動する。 config.file_watcher = ActiveSupport::EventedFileUpdateChecker 根本的な対応策は分かっておらず。 参考 Controllers and models don&amp;rsquo;t reload in dev with Puma Workers enabled · Issue #24990 · rails/rails</description>
    </item>
    
    <item>
      <title>更新を行う前に特定の属性に変更があった場合にチェックを行うスマートな方法</title>
      <link>https://rengotaku.github.io/posts/9c37bd49-cf66-4e7a-9098-ab6ebb71ec51/</link>
      <pubDate>Wed, 30 Sep 2020 13:32:33 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/9c37bd49-cf66-4e7a-9098-ab6ebb71ec51/</guid>
      <description>ソース class Code &amp;lt; ApplicationRecord validate :already_used_code, if: -&amp;gt; { will_save_change_to_code_name? } private def already_used_code # validate somethings end end 行っている事 更新前にcode_nameに変更があった場合に検証を行う 参考 ActiveRecord::AttributeMethods::Dirty</description>
    </item>
    
    <item>
      <title>ロックとトランザクションの検証</title>
      <link>https://rengotaku.github.io/posts/7a558e73-d48b-4304-b444-74afe9843a67/</link>
      <pubDate>Wed, 30 Sep 2020 12:12:13 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/7a558e73-d48b-4304-b444-74afe9843a67/</guid>
      <description>検証結果 lockしたレコードはtransactionがcommitされるまでロックされ続ける。 実行結果 コンソール1 コンソール2 検索前: 03:01:03.185, 100 ↓</description>
    </item>
    
    <item>
      <title>可逆式で暗号化を実装してみた</title>
      <link>https://rengotaku.github.io/posts/2012302b-4a4b-4a41-9a5f-28f76481b88e/</link>
      <pubDate>Mon, 28 Sep 2020 12:23:48 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/2012302b-4a4b-4a41-9a5f-28f76481b88e/</guid>
      <description>ソース # frozen_string_literal: true # NOTE: 可逆式で暗号化して保存する # 対象をcodeとしたい場合 # * テーブルに encrypted_code を定義する # * テーブルに digested_code を定義する(indexに使用</description>
    </item>
    
    <item>
      <title>可逆式、不可逆式で暗号化したい</title>
      <link>https://rengotaku.github.io/posts/ab5008a3-27a0-4053-8632-8b6ff84fd0fe/</link>
      <pubDate>Thu, 24 Sep 2020 17:10:38 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/ab5008a3-27a0-4053-8632-8b6ff84fd0fe/</guid>
      <description>不可逆式 Class: BCrypt::Password — Documentation for codahale/bcrypt-ruby (master) encrypted_data = BCrypt::Password.create(&amp;#34;test12345&amp;#34;) # $2a$12$5L9lnrTYgFS5x/pOs15Y3OHTSS1A4ThOlKzbWYJf.AlJMXkeK8AtK encrypted_data == &amp;#34;test12345&amp;#34; # true 可逆式 A simple way to encrypt and decrypt in Rails 5 | by Daveyon Mayne | Medium key = Rails.application.credentials.config[:secret_key_base][1..32] # or ENV[&amp;#34;SECRET_KEY_BASE&amp;#34;][1..32] in trial, staging or production crypt = ActiveSupport::MessageEncryptor.new(key) consumer_key = &amp;#34;test12345&amp;#34; encrypted_data = crypt.encrypt_and_sign(consumer_key, purpose: :campaign_code) # or crypt.encrypt_and_sign(self.consumer_key) puts encrypted_data # UscL3xFA6Lv5Ad/hJz/zl5N37Q==--tgjUj9WFgB1OWIp1--JuYB0iFWEfqYRtfXoZiRvg== puts</description>
    </item>
    
    <item>
      <title>interactorで引数チェックを行いたい</title>
      <link>https://rengotaku.github.io/posts/7c9b4e9d-71b0-4fb6-962e-9d02cd979a9b/</link>
      <pubDate>Wed, 09 Sep 2020 18:18:56 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/7c9b4e9d-71b0-4fb6-962e-9d02cd979a9b/</guid>
      <description>Validators for Interactors. In our previous blog post, we talked… | by Manoj M J | reflektive-engineering | Medium より module InteractorValidations def self.included(base) base.extend ClassMethods end module ClassMethods def requires(*attributes) before do attributes.each do |attribute| raise ArgumentError.new(&amp;#34;Required attribute #{attribute}is missing&amp;#34;) if context.public_send(attribute).nil? end end end end end</description>
    </item>
    
    <item>
      <title>active_model_serializersでネストが深いreferencesが無視される</title>
      <link>https://rengotaku.github.io/posts/f8c8ca2a-5e46-4336-bc9a-6c0fcec2f58b/</link>
      <pubDate>Thu, 16 Jul 2020 11:29:40 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/f8c8ca2a-5e46-4336-bc9a-6c0fcec2f58b/</guid>
      <description>Rails 5, ActiveRecord has_many for nested Serializers not used? · Issue #2011 · rails-api/active_model_serializers より render json: resource, include: &amp;#34;shipment_service_types,shipment_service_types.time_windows&amp;#34; ネスト分をincludeに記載する必要がある。 もし深さが読めない場合は、**とすれば良い。</description>
    </item>
    
    <item>
      <title>rspecのcontrollerとrequestのタイプ違い</title>
      <link>https://rengotaku.github.io/posts/3b804c9b-47db-4e45-aa32-163eb8d9e5bb/</link>
      <pubDate>Fri, 26 Jun 2020 17:13:06 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/3b804c9b-47db-4e45-aa32-163eb8d9e5bb/</guid>
      <description>解決 requestは複数のcontrollerを使用した場合に使用する。 controllerは単体の動作の確認をする為に確認する。 request spec - Request specs</description>
    </item>
    
    <item>
      <title>factorybotで関連テーブルの作成を簡易に行なっているのに引数を渡したい</title>
      <link>https://rengotaku.github.io/posts/cb6fde25-ff82-4b5b-b2ed-444d26e0da9f/</link>
      <pubDate>Mon, 22 Jun 2020 12:15:33 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/cb6fde25-ff82-4b5b-b2ed-444d26e0da9f/</guid>
      <description>解決 FactoryBot.define do factory :user_action_error do user user_action_history { association(:user_action_history, user: user) } end end 参考 Creating associations initialized via &amp;lsquo;build&amp;rsquo; no longer works in FactoryBot 5.0 · Issue #1255 · thoughtbot/factory_bot 事象 FactoryBot.define do factory :user_action_error do user user_action_history end end のように、has_many、has_one、bel</description>
    </item>
    
    <item>
      <title>ActiveRecordが発行するSQLをHookしたい</title>
      <link>https://rengotaku.github.io/posts/030f1c25-ac39-4e09-8ce6-e5f2ae51e66e/</link>
      <pubDate>Wed, 20 May 2020 13:59:40 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/030f1c25-ac39-4e09-8ce6-e5f2ae51e66e/</guid>
      <description>解決 config/initializers/active_model_query_debug.rb module ActiveModelQueryDebug def log(query, *args) # &amp;#39;Model Load&amp;#39; are targeted if args.first&amp;amp;.end_with?(&amp;#34;Load&amp;#34;) Rails.logger.debug(&amp;#34;query: #{query}&amp;#34;) end super end end ActiveRecord::ConnectionAdapters::AbstractAdapter.prepend(ActiveModelQueryDebug) 動作 [1] pry(main)&amp;gt; User.first query: SELECT `users`.* FROM `users` ORDER BY `users`.`id` ASC LIMIT 1 User Load (1.3ms) SELECT `users`.* FROM `users` ORDER BY `users`.`id` ASC LIMIT 1 参考 active_record-sql_analyzer/sql_analyzer.rb at master · square/active_record-sql_analyzer</description>
    </item>
    
    <item>
      <title>ShrineでS3にアップロードする際のmetadataを正しく設定する</title>
      <link>https://rengotaku.github.io/posts/b655ebe5-9784-45db-88cc-341986ee87e2/</link>
      <pubDate>Mon, 18 May 2020 19:30:20 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/b655ebe5-9784-45db-88cc-341986ee87e2/</guid>
      <description>解決 image_uri = Addressable::URI.convert_path(&amp;#34;https://path/to/image.jpg&amp;#34;) URI.parse(image_uri).open do |file| metadata = { &amp;#34;mime_type&amp;#34; =&amp;gt; MIME::Types.type_for(@image_uri.to_s).first.content_type, &amp;#34;filename&amp;#34; =&amp;gt; @image_uri.basename, } # metadataが正しく設定されていないと、uploaded_file.metadataも空 uploaded_file = Shrine.upload(file, storage_key, metadata:</description>
    </item>
    
    <item>
      <title>rails consoleで画像をダウンロードしようとすると、No such file or directoryエラーが発生する</title>
      <link>https://rengotaku.github.io/posts/62d115fa-4ce4-4b27-a984-12d947a8f3b8/</link>
      <pubDate>Mon, 18 May 2020 11:42:10 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/62d115fa-4ce4-4b27-a984-12d947a8f3b8/</guid>
      <description>解決 require &amp;#39;open-uri&amp;#39; open(&amp;#39;tmp/image.png&amp;#39;, &amp;#39;wb&amp;#39;) do |file| file &amp;lt;&amp;lt; open(&amp;#39;https://pbs.twimg.com/profile_images/xxx.jpg&amp;#39;).read end image_io = open(&amp;#39;tmp/image.png&amp;#39;) 事象 rails内で下記の処理を行えており、コンソールで同様の処理を実行したところ、NoMethodError:</description>
    </item>
    
    <item>
      <title>ActiveRecordでbulk insert とupdateしたい</title>
      <link>https://rengotaku.github.io/posts/4a40d9e2-ed95-4fa8-867d-768f086e27a9/</link>
      <pubDate>Fri, 01 May 2020 11:15:48 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/4a40d9e2-ed95-4fa8-867d-768f086e27a9/</guid>
      <description>解決 insert Book.insert_all([ { id: 1, title: &amp;#34;Rework&amp;#34;, author: &amp;#34;David&amp;#34; }, { id: 1, title: &amp;#34;Eloquent Ruby&amp;#34;, author: &amp;#34;Russ&amp;#34; } ]) created_at, updated_atは自動付与されないことに気をつける（DBの設定が自動挿入になっていればOK</description>
    </item>
    
    <item>
      <title>Active jobのretryの検証</title>
      <link>https://rengotaku.github.io/posts/a6545460-7706-4d6b-82b1-70e70a9080bc/</link>
      <pubDate>Thu, 23 Apr 2020 19:19:01 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/a6545460-7706-4d6b-82b1-70e70a9080bc/</guid>
      <description>ソース # frozen_string_literal: true class RetryTestJob &amp;lt; ActiveJob::Base class RetryOnlyDoError &amp;lt; StandardError; end class RetryRailseExceptionError &amp;lt; StandardError; end class RetryWithoutProcessError &amp;lt; StandardError; end class DiscardError &amp;lt; StandardError; end FILENAME = &amp;#34;#{Rails.root.to_s}/tmp/jobtest.txt&amp;#34; queue_as :high discard_on StandardError do |job, e| RetryTestJob.write_file(&amp;#34;retry_on&amp;#34;, job.job_id, job.executions, &amp;#34;#{e.class}: #{e.message}&amp;#34;) end # attempts が０になっても何も行わない retry_on RetryWithoutProcessError, wait: 1.seconds, attempts: 3 # attempts が</description>
    </item>
    
    <item>
      <title>bundle install時に使用するportを指定したい</title>
      <link>https://rengotaku.github.io/posts/a6f5b613-be19-442f-9672-7a20526f8b0f/</link>
      <pubDate>Thu, 16 Apr 2020 18:55:21 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/a6f5b613-be19-442f-9672-7a20526f8b0f/</guid>
      <description>解決 command_socksify をインストールして行う GitHub - tkeo/command_socksify もっと詳細に設定したい configに追記 ~/.ssh/config に下記のように設定して、フォワーディングしているポートを指定する</description>
    </item>
    
    <item>
      <title>annotateが動かない</title>
      <link>https://rengotaku.github.io/posts/d8577cb0-53dc-487a-a624-e607a8551e93/</link>
      <pubDate>Wed, 25 Mar 2020 18:18:41 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/d8577cb0-53dc-487a-a624-e607a8551e93/</guid>
      <description>解決 --models を付与して実行する。 $ bundle exec annotate --models 事象 gemを起動しても何も変更がかからない。 $ bundle exec annotate</description>
    </item>
    
    <item>
      <title>実行されたmiddlewareをロギングしたい</title>
      <link>https://rengotaku.github.io/posts/88a0bf8a-defe-4f00-bb73-ddf0daf14044/</link>
      <pubDate>Tue, 17 Mar 2020 16:14:59 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/88a0bf8a-defe-4f00-bb73-ddf0daf14044/</guid>
      <description>config/initializers 配下に下記のファイルを設置する。 # Trace each middleware module entry/exit. Freely adapted from # https://github.com/DataDog/dd-trace-rb/issues/368 &amp;#34;Trace each middleware in the Rails stack&amp;#34; module MiddlewareTracer def call(env) Rails.logger.debug { &amp;#34;MiddleWare: entry #{self.class.name}&amp;#34; } status, headers, response = super(env) Rails.logger.debug { &amp;#34;MiddleWare: #{self.class.name}, returning with status #{status}&amp;#34; } [status, headers, response] end end # Instrument the middleware stack after</description>
    </item>
    
    <item>
      <title>Shrineで外部の画像のURLからストレージ（S3など）にアップロードしたい</title>
      <link>https://rengotaku.github.io/posts/0833cd6b-bebd-4297-9de3-ce9a251a1c4c/</link>
      <pubDate>Thu, 12 Mar 2020 16:29:25 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/0833cd6b-bebd-4297-9de3-ce9a251a1c4c/</guid>
      <description>remote_url を利用する。 attacher = Shrine::Attacher.new(cache: :cache, store: :store) attacher.remote_url = &amp;#34;https://path/to/image.jpg&amp;#34; shrine/attacher.md at master · shrinerb/shrine Remote URL · Shrine</description>
    </item>
    
    <item>
      <title>rspecでよく見た書き方</title>
      <link>https://rengotaku.github.io/posts/6542ae14-4854-4050-bf96-54b6cc4100d5/</link>
      <pubDate>Fri, 06 Mar 2020 19:54:41 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/6542ae14-4854-4050-bf96-54b6cc4100d5/</guid>
      <description>エラーが発生しないテスト not_to raise_error RSpec.describe &amp;#34;#to_s&amp;#34; do it &amp;#34;does not raise&amp;#34; do expect { Object.new.to_s }.not_to raise_error end end raise_error matcher - Built in matchers - RSpec Expectations - RSpec - Relish モックでエラーを発生させる and_raise RSpec.describe &amp;#34;Making it raise an error&amp;#34; do it &amp;#34;raises the provided exception&amp;#34; do dbl</description>
    </item>
    
    <item>
      <title>Active Jobが失敗した場合のリトライについてテストする</title>
      <link>https://rengotaku.github.io/posts/990bd1dc-2f44-46fa-9fa6-91b5914e7669/</link>
      <pubDate>Fri, 06 Mar 2020 19:49:43 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/990bd1dc-2f44-46fa-9fa6-91b5914e7669/</guid>
      <description>解決 described_class.perform_later rescue nil RSpec.describe MyJob, type: :job do include ActiveJob::TestHelper context &amp;#39;when `MyError` is raised&amp;#39; do before do allow_any_instance_of(described_class).to receive(:perform).and_raise(MyError.new) end it &amp;#39;makes 4 attempts&amp;#39; do assert_performed_jobs 4 do described_class.perform_later rescue nil end end it &amp;#39;does something in the `retry_on` block&amp;#39; do expect(Something).to receive(:something) perform_enqueued_jobs do described_class.perform_later rescue nil end end end end perform_nowでは再実</description>
    </item>
    
    <item>
      <title>時間を操作してテストを実行したい</title>
      <link>https://rengotaku.github.io/posts/6c1ae6cb-b824-4eb0-bc31-2fa5ca0d089e/</link>
      <pubDate>Fri, 06 Mar 2020 14:54:22 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/6c1ae6cb-b824-4eb0-bc31-2fa5ca0d089e/</guid>
      <description>travel などを使用する Time.current # =&amp;gt; Sat, 09 Nov 2013 15:34:49 EST -05:00 travel 1.day do User.create.created_at # =&amp;gt; Sun, 10 Nov 2013 15:34:49 EST -05:00 end Time.current # =&amp;gt; Sat, 09 Nov 2013 15:34:49 EST -05:00 ActiveSupport::Testing::TimeHelpers</description>
    </item>
    
    <item>
      <title>インスタンス変数のメソッドをstubにしたい</title>
      <link>https://rengotaku.github.io/posts/2a2be20a-44d0-4ff4-ac0c-0630ee4e6763/</link>
      <pubDate>Fri, 06 Mar 2020 14:17:52 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/2a2be20a-44d0-4ff4-ac0c-0630ee4e6763/</guid>
      <description>let(:hoge_instance) { instance_double(Hoge) } before do allow(Hoge).to receive(:new).and_return(hoge_instance) allow(hoge_instance).to receive(:say).and_return(&amp;#34;night!&amp;#34;) end</description>
    </item>
    
    <item>
      <title>JSONをオブジェクトとしてパースしたい</title>
      <link>https://rengotaku.github.io/posts/7dc27af9-73c5-4b7b-b5fc-963afeccfb9e/</link>
      <pubDate>Mon, 02 Mar 2020 17:40:16 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/7dc27af9-73c5-4b7b-b5fc-963afeccfb9e/</guid>
      <description>object_class: OpenStruct をオプションに設定する object = JSON.parse(json, object_class: OpenStruct) Converting JSON to an Object in Ruby - Someth Victory - Medium</description>
    </item>
    
    <item>
      <title>initializeの中でdefine_methodを使用したい</title>
      <link>https://rengotaku.github.io/posts/9af4843a-02f0-47bf-83c4-d02f53ca81f5/</link>
      <pubDate>Wed, 26 Feb 2020 18:43:35 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/9af4843a-02f0-47bf-83c4-d02f53ca81f5/</guid>
      <description>解決 self.class.send(:define_method, &amp;quot;hoge&amp;quot;) で呼び出す class C def initialize(n) self.class.send(:define_method, n) { puts &amp;#34;some method #{n}&amp;#34; } end end 事象 initialize 内で、 define_method をコールすると NoMethodError: undefined method define_method エラーが発生。 ruby - How to use define_method inside initialize() - Stack Overflow</description>
    </item>
    
    <item>
      <title>asc、descが混在したソートをしたい</title>
      <link>https://rengotaku.github.io/posts/cdb55f84-3b86-4723-a081-1abaef9ac8c2/</link>
      <pubDate>Thu, 20 Feb 2020 13:40:49 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/cdb55f84-3b86-4723-a081-1abaef9ac8c2/</guid>
      <description>解決 複数をソート（asc、descが混在）の場合は、 sort を使用する。 User.all.sort { |a,b| [b.created_at, a.id] &amp;lt;=&amp;gt; [a.created_at, b.id] }.last.id == User.order(created_at: :desc).order(id: :asc).last.id note # gender asc, name asc p(dogs.sort do |a, b| [a[:gender], a[:name]] &amp;lt;=&amp;gt; [b[:gender], b[:name]] end) # gender desc, name asc p(dogs.sort do |a,</description>
    </item>
    
    <item>
      <title>Serializerで特定のfieldだけを出力したい</title>
      <link>https://rengotaku.github.io/posts/4b809adb-7e5a-4a4a-9aa5-3904b217ae66/</link>
      <pubDate>Tue, 18 Feb 2020 19:59:49 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/4b809adb-7e5a-4a4a-9aa5-3904b217ae66/</guid>
      <description>解決 fields オプションを使用する。 render json: notifications, fields: [:id, :title] How to filter attributes? · Issue #992 · rails-api/active_model_serializers · GitHub 問題 ActiveModel::MissingAttributeError (missing attribute: description) が発生する。 構成 class NotificationSerializer &amp;lt; ApplicationSerializer attribute :id attribute :title attribute :description end notifications = Notification.select(:id, :title) render json: notifications</description>
    </item>
    
    <item>
      <title>rspecでエラーテストが失敗する</title>
      <link>https://rengotaku.github.io/posts/5b43c92f-d394-416c-9877-0ecc11e77366/</link>
      <pubDate>Mon, 17 Feb 2020 13:41:57 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/5b43c92f-d394-416c-9877-0ecc11e77366/</guid>
      <description>解決 export { subject } に変更 context &amp;#34;test&amp;#34; do subject { raise RuntimeError } it { expect { subject }.to raise_error(RuntimeError) } end 事象 Failure/Error: raise RuntimeError が発生する。 context &amp;#34;test&amp;#34; do subject { raise RuntimeError } it { is_expected.to raise_error(RuntimeError) } end RSpec の is_expected で raise_error を検知したかった - Secret Garden(Instrumental) RSpec/ImplicitSubject エラ</description>
    </item>
    
    <item>
      <title>with_optionsでスッキリ</title>
      <link>https://rengotaku.github.io/posts/1986b108-1c43-464d-9e38-7b1140568b67/</link>
      <pubDate>Fri, 14 Feb 2020 15:03:39 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/1986b108-1c43-464d-9e38-7b1140568b67/</guid>
      <description>after with_options if: :new_record? do before_validation :initialize_hoge1 before_validation :initialize_hoge2 end def initialize_hoge1 hoge1 end def initialize_hoge2 hoge2 end before before_validation :initialize_hoge1 before_validation :initialize_hoge2 def initialize_hoge1 hoge1 if new_record? end def initialize_hoge2 hoge2 if new_record? end Railsで特定の条件下で走るバリデーションを作りたい - Qiita</description>
    </item>
    
    <item>
      <title>Omniauthのsetupをテストしたい</title>
      <link>https://rengotaku.github.io/posts/130dacd5-87b4-4877-a521-5623d7b9be6b/</link>
      <pubDate>Fri, 14 Feb 2020 14:01:16 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/130dacd5-87b4-4877-a521-5623d7b9be6b/</guid>
      <description>解決 def setup omniauth_strategy.options[:consumer_key] = Global..twitter.consumer_key omniauth_strategy.options[:consumer_secret] = Global..twitter.consumer_key_secret render json: { message: &amp;#34;Omniauth setup phase.&amp;#34; }, status: :not_found end RSpec.describe SessionController, type: :controller do subject { get :setup, params: { provider: :twitter } } let(:strategy_options) { Struct.new(:options).new({consumer_key: nil, consumer_secret: nil}) } let(:consumer_key) { &amp;#34;twitter-mock-consumer_key&amp;#34; } let(:consumer_secret) { &amp;#34;twitter-mock-consumer_key_secret&amp;#34; } before do allow(Global.twitter).to receive(:consumer_key).and_return(consumer_key) allow(Global.twitter).to receive(:consumer_key_secret).and_return(consumer_secret) allow(controller.request.env).to receive(:[]).and_call_original allow(controller.request.env).to receive(:[]).with(&amp;#34;omniauth.strategy&amp;#34;).and_return(strategy_options) end context &amp;#34;Success&amp;#34; do it &amp;#34</description>
    </item>
    
    <item>
      <title>rubyでランダムな文字列を生成したい</title>
      <link>https://rengotaku.github.io/posts/6389b75c-03d6-4668-9cc4-f694b17d1d6b/</link>
      <pubDate>Thu, 13 Feb 2020 11:15:21 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/6389b75c-03d6-4668-9cc4-f694b17d1d6b/</guid>
      <description>(0...8).map { (65 + rand(26)).chr }.join # OYOTTDME How to generate a random string in Ruby - Stack Overflow</description>
    </item>
    
    <item>
      <title>omniauthのTwitterプロバイダーのauthキーをコントローラーで設定</title>
      <link>https://rengotaku.github.io/posts/4fce0411-7c96-42a2-8d3e-2861e57754e1/</link>
      <pubDate>Wed, 12 Feb 2020 15:14:26 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/4fce0411-7c96-42a2-8d3e-2861e57754e1/</guid>
      <description>解決 遷移するパスが正しくなかった。(/api/auth/:provider/setup の様にscopeをネストしていた) デフォルトで遷移する</description>
    </item>
    
    <item>
      <title>Middlewareをテストしたい</title>
      <link>https://rengotaku.github.io/posts/a876ea6d-99a6-43fe-b419-71896f26c406/</link>
      <pubDate>Mon, 10 Feb 2020 17:41:00 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/a876ea6d-99a6-43fe-b419-71896f26c406/</guid>
      <description>対象モジュール railsのログにタグづけしたい | ベジタブルプログラム テスト RSpec.describe TaggedLogger do subject { TaggedLogger::Middleware.new(app) } let(:app) { -&amp;gt;(env) { [200, env, &amp;#34;app&amp;#34;] } } let(:request) { Rack::MockRequest.new(subject) } let(:action_dispatch_request) { ActionDispatch::TestRequest.create } before do allow(ActionDispatch::Request).to receive(:new).and_return(action_dispatch_request) allow(action_dispatch_request).to receive(:session).and_return(Struct.new(:user_id, :loaded?).new(*session_methods)) allow(Rails.logger).to receive(:tagged).and_yield</description>
    </item>
    
    <item>
      <title>railsのログにタグづけしたい</title>
      <link>https://rengotaku.github.io/posts/c8804b8e-6ac2-450c-b5ea-9009c1a43da4/</link>
      <pubDate>Mon, 10 Feb 2020 15:38:44 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/c8804b8e-6ac2-450c-b5ea-9009c1a43da4/</guid>
      <description>設定 class Application &amp;lt; Rails::Application ... require Rails.root.join(&amp;#34;lib/tagged_logger.rb&amp;#34;) initializer &amp;#34;tagged_logger.insert_middleware&amp;#34; do |app| app.config.middleware.use TaggedLogger::Middleware end end # frozen_string_literal: true module TaggedLogger class Middleware def initialize(app) @app = app end def call(env) request = ActionDispatch::Request.new(env) request.session.send(:load!) unless request.session.loaded? if (user_id = request.session[:user_id]) tag = &amp;#34;user_id=#{user_id}&amp;#34; Rails.logger.tagged(tag) do @app.call(env) end else @app.call(env) end end end end アウトプット [user_id=1] が今回付与したタ</description>
    </item>
    
    <item>
      <title>railsのipメソッドとremove_ipメソッドの違い</title>
      <link>https://rengotaku.github.io/posts/ab1cdacb-a34b-45ed-a16a-7cd2627d10b7/</link>
      <pubDate>Mon, 10 Feb 2020 15:36:03 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/ab1cdacb-a34b-45ed-a16a-7cd2627d10b7/</guid>
      <description>解決 remote_ip は、 ActionDispatch::RemoteIp で判定したIPを優先する。 その判定がない場合は、 ip メソッドを使用する。 ruby - What&amp;rsquo;s the difference between request.remote_ip and request.ip in Rails? - Stack Overflow</description>
    </item>
    
    <item>
      <title>RSpec/MultipleExpectationsを回避</title>
      <link>https://rengotaku.github.io/posts/74af4a87-af15-46ef-bd8d-2b59f87d850e/</link>
      <pubDate>Thu, 06 Feb 2020 11:53:06 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/74af4a87-af15-46ef-bd8d-2b59f87d850e/</guid>
      <description>解決 aggregate_failures を使用する it &amp;#34;正常動作する&amp;#34; do subject aggregate_failures &amp;#34;最後まで通過&amp;#34; do expect(job_instance).to have_received(:hoge1) expect(job_instance).to have_received(:hoge2).at_least(1).times end end 実用的な新機能が盛りだくさん！RSpe</description>
    </item>
    
    <item>
      <title>メソッドの取得の仕方</title>
      <link>https://rengotaku.github.io/posts/239ee9a9-586e-4a76-92b3-b9f2dc365658/</link>
      <pubDate>Thu, 30 Jan 2020 14:52:06 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/239ee9a9-586e-4a76-92b3-b9f2dc365658/</guid>
      <description>class publicメソッド 正解 UsersController.instance_methods(false) =&amp;gt; [:index, :exchange, :logs_external] class privateメソッド 正解 UsersController.private_instance_methods(false) =&amp;gt; [:_layout, :not_found_message, :require_signup_form_parameters] module publicメソッド 正解 UsersController.instance_methods(false) =&amp;gt; [:select_yet_tweets_by_sorted_maps, :select_favorite_yet_tweets] module privateメソッド 正解 UsersController.private_instance_methods(false) =&amp;gt;</description>
    </item>
    
    <item>
      <title>修正したファイルのみチェック</title>
      <link>https://rengotaku.github.io/posts/a13365d5-d033-404d-ae83-b8f7fa0dd4c8/</link>
      <pubDate>Tue, 28 Jan 2020 16:15:55 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/a13365d5-d033-404d-ae83-b8f7fa0dd4c8/</guid>
      <description>For rubocop $ echo $(git diff origin/master `git branch | grep &amp;#39;*&amp;#39; | cut -d&amp;#39; &amp;#39; -f2` | grep &amp;#39;diff --git&amp;#39; | sed -E &amp;#39;s#diff --git a\/(.+) b\/.+#\1#&amp;#39;) | { read FILES; bundle exec rubocop $FILES; } For rspec $ echo $(git diff origin/master `git branch | grep &amp;#39;*&amp;#39; | cut -d&amp;#39; &amp;#39; -f2` | grep &amp;#39;diff --git&amp;#39; | sed -E &amp;#39;s#diff --git a\/(.+) b\/.+#\1#&amp;#39; | grep spec) | {</description>
    </item>
    
    <item>
      <title>railsのenumから値を取得したい</title>
      <link>https://rengotaku.github.io/posts/2fdad37c-deb2-46d9-99a5-92a3f5df0b0f/</link>
      <pubDate>Tue, 28 Jan 2020 16:02:05 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/2fdad37c-deb2-46d9-99a5-92a3f5df0b0f/</guid>
      <description>enum sale_info: { plan_1: 1, plan_2: 2, plan_3: 3, plan_4: 4, plan_5: 5 } の場合、 Model.sale_infos[:plan_1] で取得 How get integer value from a enum in Rails? - Stack Overflow</description>
    </item>
    
    <item>
      <title>Rubyで処理速度の平均を計測したい</title>
      <link>https://rengotaku.github.io/posts/9a9f4862-dd9c-4fbd-a90c-bb4551f2ebab/</link>
      <pubDate>Tue, 28 Jan 2020 15:15:11 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/9a9f4862-dd9c-4fbd-a90c-bb4551f2ebab/</guid>
      <description>計測 require &amp;#39;benchmark&amp;#39; include Benchmark # we need the CAPTION and FORMAT constants nn = 5000000 Benchmark.benchmark(CAPTION, 7, FORMAT, &amp;#34;&amp;gt;total:&amp;#34;, &amp;#34;&amp;gt;avg:&amp;#34;) do |x| tf = x.report(&amp;#34;for:&amp;#34;) { for i in 1..nn; a = &amp;#34;1&amp;#34;; end } tt = x.report(&amp;#34;times:&amp;#34;) { nn.times do ; a = &amp;#34;1&amp;#34;; end } tu = x.report(&amp;#34;upto:&amp;#34;) { 1.upto(nn) do ; a = &amp;#34;1&amp;#34;; end } [tf+tt+tu, (tf+tt+tu)/3] end 結果 user system total real</description>
    </item>
    
    <item>
      <title>リクエストのremote_ipを変更してテストしたい</title>
      <link>https://rengotaku.github.io/posts/957c64fd-ee2e-4ce6-bb60-093b3a665189/</link>
      <pubDate>Mon, 27 Jan 2020 17:29:26 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/957c64fd-ee2e-4ce6-bb60-093b3a665189/</guid>
      <description>解決 get &amp;#34;/path&amp;#34;, params: { }, headers: { &amp;#34;REMOTE_ADDR&amp;#34; =&amp;gt; &amp;#34;1.2.3.4&amp;#34; } Change value of request.remote_ip in Ruby on Rails - Stack Overflow 事象 allow_any_instance_of(ActionDispatch::Request).to receive(:remote_ip).and_return(&amp;#34;1.2.3.4&amp;#34;) でも実現可能だが、 rubocopで RSpec/AnyInstance が発生してしまう。(instance_doubl</description>
    </item>
    
    <item>
      <title>コントローラーのテストで例外が発生してテストが失敗する</title>
      <link>https://rengotaku.github.io/posts/e848d251-d646-4d69-b394-c113fb84410c/</link>
      <pubDate>Mon, 27 Jan 2020 17:16:30 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/e848d251-d646-4d69-b394-c113fb84410c/</guid>
      <description>解決 context に、 show_exceptions: true オプションを設定する。 context &amp;#34;failed&amp;#34;, show_exceptions: true do ... end Rails アプリケーションの不安定なテストを撲滅したい 〜system spec のデバッグ方法とテストを不安</description>
    </item>
    
    <item>
      <title>削除処理を呼び出し時にActionController::InvalidAuthenticityTokenが発生</title>
      <link>https://rengotaku.github.io/posts/e7758338-63b3-420c-8b10-3a37107141a7/</link>
      <pubDate>Tue, 21 Jan 2020 13:47:15 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/e7758338-63b3-420c-8b10-3a37107141a7/</guid>
      <description>解決 dockerで開発しているが、ポートを変更している為に発生している模様。nginxなどでヘッダーのトークンを書き換えればいいかなと。 それ</description>
    </item>
    
    <item>
      <title>rspecでテストをまとめる</title>
      <link>https://rengotaku.github.io/posts/c572bdd1-576f-4caf-a2b0-fb2dcda032be/</link>
      <pubDate>Thu, 16 Jan 2020 16:14:30 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/c572bdd1-576f-4caf-a2b0-fb2dcda032be/</guid>
      <description>テストメソッド def self.runnable! return if !(Rails.env.staging? || Rails.env.production?) || ENV[&amp;#34;IMPORTANT_CODE&amp;#34;].present? raise Error end アフター describe &amp;#34;#runnable!&amp;#34; do subject { described_class.runnable! } let(:set_code) { ENV[&amp;#34;IMPORTANT_CODE&amp;#34;] = &amp;#34;hoge&amp;#34; } let(:unset_code) { ENV[&amp;#34;IMPORTANT_CODE&amp;#34;] = nil } context &amp;#34;development&amp;#34; do before { allow(Rails.env).to receive(:development?).and_return(true) } it_behaves_like &amp;#34;check important code for development&amp;#34; end context &amp;#34;staging&amp;#34; do before { allow(Rails.env).to receive(:staging?).and_return(true) } it_behaves_like &amp;#34;check important code for</description>
    </item>
    
    <item>
      <title>application.rb内でI18nを使用すると翻訳できない</title>
      <link>https://rengotaku.github.io/posts/11d31c8e-a7bd-4661-85fc-353749bbca68/</link>
      <pubDate>Thu, 16 Jan 2020 13:06:53 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/11d31c8e-a7bd-4661-85fc-353749bbca68/</guid>
      <description>解決 config.after_initialize 内で行う。 module KuraPlatformBackend class Application &amp;lt; Rails::Application ... config.after_initialize do raise I18n.t(&amp;#34;error_messages.not_hoge&amp;#34;) if hoge end end end 事象 サーバ起動直後に特定の条件でエラーを発生させるようにしたい。 しかし、 translation missing: en.error_messages.not_hoge となる。 module KuraPlatformBackend class</description>
    </item>
    
    <item>
      <title>rspecでスタブを使用</title>
      <link>https://rengotaku.github.io/posts/bd537f3d-6cad-4d94-9efd-d1200b7bd294/</link>
      <pubDate>Tue, 14 Jan 2020 11:45:29 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/bd537f3d-6cad-4d94-9efd-d1200b7bd294/</guid>
      <description>staticメソッド describe &amp;#34;comment&amp;#34; do context &amp;#34;サービスがHOGEの場合&amp;#34; do before do allow(Global.application).to receive(:service).and_return(&amp;#34;HOGE&amp;#34;) #&amp;lt;= キモ ... end it &amp;#39;hoge&amp;#39; do ... end end end [RSpec] allow、receive、an</description>
    </item>
    
    <item>
      <title>macにrbenvをインストール</title>
      <link>https://rengotaku.github.io/posts/234d437a-767d-4df2-9e49-5f4a2674bd40/</link>
      <pubDate>Thu, 09 Jan 2020 10:09:25 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/234d437a-767d-4df2-9e49-5f4a2674bd40/</guid>
      <description>rbenvインストール $ brew update $ brew install rbenv ruby-build $ echo &#39;eval &amp;quot;$(rbenv init -)&amp;quot;&#39; &amp;gt;&amp;gt; ~/.bash_profile $ source ~/.bash_profile $ rbenv --version rubyインストール $ rbenv install --list Available versions: ・ ・ 2.1.1 2.1.2 2.2.0-dev jruby-1.5.6 jruby-1.6.3 jruby-1.6.4 ・ ・ $ rbenv install 2.7.0 全環境のバージ</description>
    </item>
    
    <item>
      <title>モデルの値を正規化する独自クラス</title>
      <link>https://rengotaku.github.io/posts/3fc93131-69e4-43c8-a7af-438cf8ab97a8/</link>
      <pubDate>Mon, 21 Oct 2019 10:06:07 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/3fc93131-69e4-43c8-a7af-438cf8ab97a8/</guid>
      <description>クラス # 値を設定(setter)する際に、指定の方法で正規化した値を設定する。 # # 宣言方法：string_normalizable :name, :type # name: カ</description>
    </item>
    
    <item>
      <title>rubyの正規表現</title>
      <link>https://rengotaku.github.io/posts/c1459315-6374-417e-bc36-818aee249b45/</link>
      <pubDate>Tue, 08 Oct 2019 11:40:57 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/c1459315-6374-417e-bc36-818aee249b45/</guid>
      <description>入れ子のマッチ 対象 部屋面積は0.3〜200.0(帖)範囲内でなければなりません(テスト (テスト２)) 建物階数(テスト)は1〜10範囲内でなけ</description>
    </item>
    
    <item>
      <title>文字コードの16進数を得たい</title>
      <link>https://rengotaku.github.io/posts/7e937e59-6b00-4a19-a044-7d037d25ff76/</link>
      <pubDate>Fri, 04 Oct 2019 14:26:21 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/7e937e59-6b00-4a19-a044-7d037d25ff76/</guid>
      <description>解決 .unpack(&#39;H*&#39;) を使用する。 &amp;#34;ア&amp;#34;.unpack(&amp;#39;H*&amp;#39;) =&amp;gt; [&amp;#34;e382a2&amp;#34;] カナを16進数変換 &amp;quot;アイウエオカキクケコサシ</description>
    </item>
    
    <item>
      <title>文字コードを知りたい</title>
      <link>https://rengotaku.github.io/posts/86bb19cc-2b26-4efa-a005-01c24927bf37/</link>
      <pubDate>Fri, 04 Oct 2019 10:55:58 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/86bb19cc-2b26-4efa-a005-01c24927bf37/</guid>
      <description>解決 ord を使用する。 pry(main)&amp;gt; &amp;#34;-&amp;#34;.ord =&amp;gt; 45 pry(main)&amp;gt; &amp;#34;ー&amp;#34;.ord =&amp;gt; 12540 pry(main)&amp;gt; &amp;#34;－&amp;#34;.ord =&amp;gt; 65293 Rubyで文字列と数値を相互に変換するメソ</description>
    </item>
    
    <item>
      <title>rubyのリリースバージョンを確認</title>
      <link>https://rengotaku.github.io/posts/09326aaf-72d4-4f2c-b937-fc8865b0081e/</link>
      <pubDate>Tue, 03 Sep 2019 16:33:50 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/09326aaf-72d4-4f2c-b937-fc8865b0081e/</guid>
      <description>方法 Ruby 2.7.0-preview1 Released のようなページを確認する。 tips サポート期限を知りたい Ruby Maintenance Branches に下記のように記載されている Ruby 2.4 status: security maintenance release date: 2016-12-25 EOL date: 2020-03-31</description>
    </item>
    
    <item>
      <title>minitestでprivateメソッドをテスト</title>
      <link>https://rengotaku.github.io/posts/1a7b69f1-218d-4982-ba5f-a3fee308cdfe/</link>
      <pubDate>Thu, 29 Aug 2019 15:57:36 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/1a7b69f1-218d-4982-ba5f-a3fee308cdfe/</guid>
      <description>解決 __send__を使用する Class Person def initialize(name) @name = name end private def tom(generation) @name = &amp;#39;tom&amp;#39; + generation.to_s end end person = Person.new(&amp;#39;tarou&amp;#39;) person.__send__(:tom, 2) assert { re_inquiry.instance_eval(&amp;#39;@name&amp;#39;).size == &amp;#39;tom2&amp;#39; } #&amp;lt;= インスタンス変数を参照 instance_eval (Object) - Rubyリファレンス send</description>
    </item>
    
    <item>
      <title>`Style/ClassVars` でクラス変数の誤りを指摘される</title>
      <link>https://rengotaku.github.io/posts/c5b69aa1-f4ec-47ab-95c0-0ca1c5ab1188/</link>
      <pubDate>Thu, 15 Aug 2019 16:07:59 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/c5b69aa1-f4ec-47ab-95c0-0ca1c5ab1188/</guid>
      <description>解決 instance_variable_get メソッドを使用する。 class A @client = SomeClient.new def do_api client.do end def client self.class.instance_variable_get(:@client) end end ruby - How to correct Style/ClassVars in RuboCop? - Stack Overflow 事象 class A def do_api client.do end def client @@client ||= SomeClient.new end end のように、クライアントを一度きりし</description>
    </item>
    
    <item>
      <title>verifyメソッドのテストが失敗する</title>
      <link>https://rengotaku.github.io/posts/ce4e5dde-88a5-468e-9e57-d8490989ff23/</link>
      <pubDate>Thu, 15 Aug 2019 13:45:29 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/ce4e5dde-88a5-468e-9e57-d8490989ff23/</guid>
      <description>解決 Mockクラスではなく、define_singleton_methodを使用してmethodを生やす。 ただし、assertメソッドなどが</description>
    </item>
    
    <item>
      <title>ひらがな、カタカナを小文字から大文字に変換</title>
      <link>https://rengotaku.github.io/posts/770ce494-a1ec-496c-83d2-ec7ebaaa645f/</link>
      <pubDate>Mon, 05 Aug 2019 17:22:15 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/770ce494-a1ec-496c-83d2-ec7ebaaa645f/</guid>
      <description>解決 【SSIS】日本語の小文字を大文字に変換する - Tumbling Dice の配列を利用する 下記はカタカナのみ対応 def kana_upercase(kana) [ %W(ァ ア), %W(ィ イ), %W(ゥ ウ),</description>
    </item>
    
    <item>
      <title>濁点、半濁点の文字を取得</title>
      <link>https://rengotaku.github.io/posts/5b8cab5d-c20a-477d-834b-6c2e2f53e670/</link>
      <pubDate>Tue, 30 Jul 2019 09:44:49 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/5b8cab5d-c20a-477d-834b-6c2e2f53e670/</guid>
      <description>解決 def find_dakuon_and_handakuon(kana) codepoints = kana.codepoints[0] moji = codepoints.chr(Encoding::UTF_8) dakuon = moji + &amp;quot;\u3099&amp;quot; # 濁点 handakuon = moji + &amp;quot;\u309a&amp;quot; # 半濁点 [ ActiveSupport::Multibyte::Unicode.normalize(dakuon, :c), ActiveSupport::Multibyte::Unicode.normalize(handakuon, :c) ] end 実行結果 find_dakuon_and_handakuon(&#39;ハ&#39;) # =&amp;gt;</description>
    </item>
    
    <item>
      <title>クラス内でselfメソッドをクラス名を指定せず呼び出したい</title>
      <link>https://rengotaku.github.io/posts/0a337323-bd67-44b1-b3c9-c5c8ebc05336/</link>
      <pubDate>Fri, 19 Jul 2019 15:51:12 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/0a337323-bd67-44b1-b3c9-c5c8ebc05336/</guid>
      <description>解決 self.class.method_name で呼び出す class Person def call(num) puts &amp;quot;#{self.class.name(num)}だよ&amp;quot; end def self.name(num) if num = 1 &#39;田中&#39; else &#39;名無し&#39; end end end</description>
    </item>
    
    <item>
      <title>日付計算</title>
      <link>https://rengotaku.github.io/posts/85d69365-98ff-48da-9447-89506aa00079/</link>
      <pubDate>Fri, 19 Jul 2019 14:49:57 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/85d69365-98ff-48da-9447-89506aa00079/</guid>
      <description>数日前 since を使用する [1] pry(main)&amp;gt; 2.days.since =&amp;gt; Sun, 21 Jul 2019 14:50:21 JST +09:00 Rails の Time#since で混乱したのでまとめる - 雀巽の日記帳</description>
    </item>
    
    <item>
      <title>gretelのconfigの自動リロードをdevelopment以外の環境で有効にしたい</title>
      <link>https://rengotaku.github.io/posts/14fcb8b8-6a2e-40e0-af08-3ef565032c12/</link>
      <pubDate>Fri, 05 Jul 2019 12:23:08 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/14fcb8b8-6a2e-40e0-af08-3ef565032c12/</guid>
      <description>問題 config/breadcrumbs.rb の編集が即時反映されない。 解決 Rails.application.configure do # config/breadcrumbs.rb を自動ロード Gretel.configure do |config| config.reload_environments &amp;lt;&amp;lt; &amp;#34;my_development&amp;#34; end 原因 ローカルで動作さている環境が development でないため。 普通はローカル開発時は、</description>
    </item>
    
    <item>
      <title>意味のない継承を構造体に置き換える</title>
      <link>https://rengotaku.github.io/posts/1e7d92ca-3e40-46d9-ab97-056ccb3cb3b5/</link>
      <pubDate>Wed, 03 Jul 2019 16:08:09 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/1e7d92ca-3e40-46d9-ab97-056ccb3cb3b5/</guid>
      <description>修正前 クラス構成 module MailSendLog class Base class &amp;lt;&amp;lt; self def post(param) data = default_data.merge( param: param ) @logger.post(@tag, data) end def default_data { tag: tag, specific_item: specific_item, } end def tag raise NotImplementedError, &amp;#34;must implement #{self.class}##{__method__}&amp;#34; end def specific_item raise NotImplementedError, &amp;#34;must implement #{self.class}##{__method__}&amp;#34; end end end end module MailSendLog class Recommend1 &amp;lt; MailSendLog::Base class &amp;lt;&amp;lt; self protected def tag :recommend1 end def specific_item</description>
    </item>
    
    <item>
      <title>rubyで構造体を使いたい</title>
      <link>https://rengotaku.github.io/posts/2abab715-12a8-4ab0-b451-258c4366fe44/</link>
      <pubDate>Wed, 26 Jun 2019 18:24:31 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/2abab715-12a8-4ab0-b451-258c4366fe44/</guid>
      <description>require &amp;#34;ostruct&amp;#34; config = OpenStruct.new config.level #=&amp;gt; nil config.level = :debug config.level #=&amp;gt; :debug 手軽に構造体を使いたい時にOpenStruct - Qiita</description>
    </item>
    
    <item>
      <title>::ClassNameの意味</title>
      <link>https://rengotaku.github.io/posts/f474b685-0a9a-42b8-9328-462d2fe49945/</link>
      <pubDate>Wed, 26 Jun 2019 15:12:29 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/f474b685-0a9a-42b8-9328-462d2fe49945/</guid>
      <description>定数のスコープ演算子で、トップレベルの定数であることを示す。 A = &amp;#34;::A&amp;#34; class Foo A = &amp;#34;Foo::A&amp;#34; class Bar A = &amp;#34;Foo::Bar::A&amp;#34; p A # =&amp;gt; &amp;#34;Foo::Bar::A&amp;#34; p Foo::A # =&amp;gt; &amp;#34;Foo::A&amp;#34; p ::A # =&amp;gt; &amp;#34;::A&amp;#34; end end chef - ruby でクラス名の先</description>
    </item>
    
    <item>
      <title>HTTPクライアントライブラリのFaradayを使う</title>
      <link>https://rengotaku.github.io/posts/d83470fc-978d-4962-99f8-c8dd538b0c35/</link>
      <pubDate>Mon, 10 Jun 2019 14:25:08 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/d83470fc-978d-4962-99f8-c8dd538b0c35/</guid>
      <description>conn = Faraday::Connection.new(url: &amp;#34;https://example.com&amp;#34;) do |builder| builder.use Faraday::Request::UrlEncoded builder.use Faraday::Adapter::NetHttp end res = conn.get &amp;#39;/path/to/url&amp;#39; # &amp;lt;= https://example.com/path/to/url res.status # &amp;lt;= 200 or 404 ... Ruby の HTTP クライアントライブラリ Faraday が便利そう</description>
    </item>
    
    <item>
      <title>dockerで動くrailsでデバックを行いたい</title>
      <link>https://rengotaku.github.io/posts/b6b89728-605f-40b8-9d57-2bb1cc14b932/</link>
      <pubDate>Thu, 30 May 2019 11:10:57 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/b6b89728-605f-40b8-9d57-2bb1cc14b932/</guid>
      <description>設定 docker-compose.yml services: rails: &amp;amp;app_base tty: true stdin_open: true 操作 アタッチ docker attach [container_name] $ docker-compose run --rm --service-ports [service name] でいけるかと思ったが、再度コンテナを立ち上げる挙動になり期待しない動きをする 便利コマンド</description>
    </item>
    
    <item>
      <title>日時をよくあるフォーマットの文字列で取得したい</title>
      <link>https://rengotaku.github.io/posts/829f1f8c-5a83-4c37-b05d-204b2b2d70d4/</link>
      <pubDate>Mon, 27 May 2019 14:06:52 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/829f1f8c-5a83-4c37-b05d-204b2b2d70d4/</guid>
      <description>Time.now.strftime(&amp;#39;%Y-%m-%d %H:%M:%S&amp;#39;) strftime - リファレンス - - Railsドキュメント</description>
    </item>
    
    <item>
      <title>raiseを検証したい</title>
      <link>https://rengotaku.github.io/posts/935cf5a3-4605-4c50-96a3-c9f4064f624a/</link>
      <pubDate>Fri, 17 May 2019 19:01:07 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/935cf5a3-4605-4c50-96a3-c9f4064f624a/</guid>
      <description>assert_raises RuntimeError do # something to do raise error end module MiniTest::Assertions - Documentation for Ruby 2.1.0 https://docs.ruby-lang.org/en/2.1.0/MiniTest/Assertions.html</description>
    </item>
    
    <item>
      <title>csvの一行目にcrlfが含まれている為エラーになる</title>
      <link>https://rengotaku.github.io/posts/4db39f95-be1b-4fb1-8503-0560ae376ca6/</link>
      <pubDate>Thu, 16 May 2019 18:27:33 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/4db39f95-be1b-4fb1-8503-0560ae376ca6/</guid>
      <description>事象 # ファイルから一行ずつ読み込む i_csv = CSV.open(filepath, &amp;#34;rb&amp;#34;, skip_blanks: true, force_quotes: true) processed_position = 0 begin i_csv.each do |row| processed_position = i_csv.pos end rescue CSV::MalformedCSVError =&amp;gt; ex aborted_position = i_csv.pos io = i_csv.to_io io.seek(processed_position) puts &amp;#34;error message: #{ex.message}, stacktrace: #{ex.backtrace.join(&amp;#34;,&amp;#34;)}&amp;#34; puts io.read(aborted_position - processed_position) end エラー error message: Missing or stray quote in line 1,</description>
    </item>
    
    <item>
      <title>minitestでmockの引数を厳密にチェックしたくない</title>
      <link>https://rengotaku.github.io/posts/ccbc4a39-2105-4cfa-860a-f6a4c608cbf2/</link>
      <pubDate>Tue, 14 May 2019 19:34:58 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/ccbc4a39-2105-4cfa-860a-f6a4c608cbf2/</guid>
      <description>@mock.expect(:do_something_else, true) do |a1, a2| # nothings end minitest/mock.rb at master · seattlerb/minitest</description>
    </item>
    
    <item>
      <title>特定のgemの更新をGemfile.lockに反映させる</title>
      <link>https://rengotaku.github.io/posts/78936827-219a-4307-b689-b15ea2b2c91d/</link>
      <pubDate>Fri, 26 Apr 2019 16:28:26 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/78936827-219a-4307-b689-b15ea2b2c91d/</guid>
      <description>$ bundle update --source therubyracer bundle updateで特定のgemのみ更新する - Qiita</description>
    </item>
    
    <item>
      <title>ヒアドキュメントをfreezeしたい</title>
      <link>https://rengotaku.github.io/posts/29c0da06-cfa1-40b0-8244-b5886bf94552/</link>
      <pubDate>Wed, 10 Apr 2019 17:21:01 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/29c0da06-cfa1-40b0-8244-b5886bf94552/</guid>
      <description>QUERY = &amp;lt;&amp;lt;-&#39;SQL&#39;.freeze select hogehoge SQL あんちょこ:【Ruby】heredocをfreezeする</description>
    </item>
    
    <item>
      <title>画像をダンロードしたい</title>
      <link>https://rengotaku.github.io/posts/bdee2c37-ca47-4815-9ec9-66b39864e54d/</link>
      <pubDate>Wed, 27 Feb 2019 10:17:37 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/bdee2c37-ca47-4815-9ec9-66b39864e54d/</guid>
      <description>require &amp;#34;open-uri&amp;#34; open(&amp;#34;http://exmple.com/example.jpg&amp;#34;) do |image| File.open(&amp;#34;something.jpg&amp;#34;,&amp;#34;wb&amp;#34;) do |file| file.puts image.read end end Ruby 画像をダウンロードする方法 – KeruuWeb</description>
    </item>
    
    <item>
      <title>activerecordのjson版の作りかけ</title>
      <link>https://rengotaku.github.io/posts/8883033c-0933-4f14-a52c-3ed0eadd05e1/</link>
      <pubDate>Tue, 19 Feb 2019 19:50:06 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/8883033c-0933-4f14-a52c-3ed0eadd05e1/</guid>
      <description>json [ { &amp;#34;id&amp;#34;: 1, &amp;#34;image_type_id&amp;#34;: 1, &amp;#34;name&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;s&amp;#34;: 400, &amp;#34;width&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;height&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;alt&amp;#34;: &amp;#34;xxxx&amp;#34;, &amp;#34;save_image_url&amp;#34;: &amp;#34;https://lh3.googleusercontent.com/~&amp;#34; }, { &amp;#34;id&amp;#34;: 2, &amp;#34;image_type_id&amp;#34;: 1, &amp;#34;name&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;s&amp;#34;: 400, &amp;#34;width&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;height&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;alt&amp;#34;: &amp;#34;xxxx&amp;#34;, &amp;#34;save_image_url&amp;#34;: &amp;#34;https://lh3.googleusercontent.com/~&amp;#34; } ] [ { &amp;#34;id&amp;#34;: 1, &amp;#34;path&amp;#34;: &amp;#34;/images/xxxxx/events&amp;#34;, &amp;#34;memo&amp;#34;: &amp;#34;イベントフォルダ&amp;#34; }, { &amp;#34;id&amp;#34;: 2, &amp;#34;path&amp;#34;: &amp;#34;/images/xxxxxx/events/dummy&amp;#34;,</description>
    </item>
    
    <item>
      <title>RubyとPHPで日付の差分の違い</title>
      <link>https://rengotaku.github.io/posts/88f9d72c-ce95-4e6d-81e8-88430706e1a5/</link>
      <pubDate>Tue, 19 Feb 2019 12:02:26 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/88f9d72c-ce95-4e6d-81e8-88430706e1a5/</guid>
      <description>日付の差分の算出方法を似せているつもりだが、差がでてしまう。 [8] pry(main)&amp;gt; now = Time.zone.now =&amp;gt; Tue, 19 Feb 2019 11:45:18 JST +09:00 [9] pry(main)&amp;gt; before_7days = Time.zone.now - 7.days =&amp;gt; Tue, 12 Feb 2019 11:45:18 JST +09:00 [14] pry(main)&amp;gt; ((now - (before_7days)) / 1.day).to_i =&amp;gt; 6 # 差が</description>
    </item>
    
    <item>
      <title>ActiveRecordを自作しようとした際に参考にしたサイト</title>
      <link>https://rengotaku.github.io/posts/255235db-c274-48e9-857e-62a2591a0bf3/</link>
      <pubDate>Mon, 18 Feb 2019 16:51:05 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/255235db-c274-48e9-857e-62a2591a0bf3/</guid>
      <description>できたもの。 activerecordのjson版の作りかけ | ベジタブルプログラム リンク集 Rubyのクラスで定義されたattr_accesso</description>
    </item>
    
    <item>
      <title>middlemanのインストールからhtmlを出力するまで</title>
      <link>https://rengotaku.github.io/posts/d2809b53-39a5-42f8-8f94-9bdc154cafc9/</link>
      <pubDate>Thu, 14 Feb 2019 10:26:43 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/d2809b53-39a5-42f8-8f94-9bdc154cafc9/</guid>
      <description>環境 ruby: ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-darwin17] mac: ProductName: Mac OS X, ProductVersion: 10.13.4, BuildVersion: 17E202 手順 $ gem install middleman # bundlerは用意しなくて良い $ rbenv exec bundle exec middleman init new_project # プロジェクトを作成 create .gitignore create Gemfile create config.rb create source/images/.keep create source/index.html.erb create</description>
    </item>
    
    <item>
      <title>一時的なメソッドのオーバーライドを実現するに辺り参考にしたサイト</title>
      <link>https://rengotaku.github.io/posts/bb4b25e4-7b3c-4c52-8e88-9536ec77068a/</link>
      <pubDate>Thu, 07 Feb 2019 10:17:09 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/bb4b25e4-7b3c-4c52-8e88-9536ec77068a/</guid>
      <description>ruby - How can I mock with a block in minitest? - Stack Overflow Ruby block/proc/lambdaの使いどころ - Qiita Ruby で Proc とブロックの相互変換について - Camera Obscura Procを制する者が</description>
    </item>
    
    <item>
      <title>rbenvのrubyが突如動かなくなった</title>
      <link>https://rengotaku.github.io/posts/dac18ae2-3c38-4fbd-a18d-29d134efde9f/</link>
      <pubDate>Tue, 05 Feb 2019 16:53:04 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/dac18ae2-3c38-4fbd-a18d-29d134efde9f/</guid>
      <description>事象 railsを動かそうとしたら下記のエラーが発生した。 Sorry, you can&#39;t use byebug without Readline. To solve this, you need to rebuild Ruby with Readline support. If using Ubuntu, try `sudo apt-get install libreadline-dev` and then reinstall your Ruby. 対応 $ RUBY_CONFIGURE_OPTS=--with-readline-dir=`brew --prefix readline` rbenv install 2.3.1 メモ</description>
    </item>
    
    <item>
      <title>Parallel処理の後にActiverecordで検索しようとすると通信エラーが発生する</title>
      <link>https://rengotaku.github.io/posts/ddddd4c5-0d7e-462f-9d64-d8096812f488/</link>
      <pubDate>Wed, 30 Jan 2019 12:25:19 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/ddddd4c5-0d7e-462f-9d64-d8096812f488/</guid>
      <description>対応 検索を行う前に、コネクションを再接続する SomeModel.connection.reconnect! SomeModel.find(1) 事象 メッセージ ActiveRecord::StatementInvalid: Mysql2::Error: MySQL server has gone away: SELECT... 処理 Parallel.map(SomeModel.all, in_process: 4) do |some_model| # something to do... end SomeModel.find(1) # &amp;lt;- ここで発生</description>
    </item>
    
    <item>
      <title>エンコードエラーを無視してCSVをCP932(sjis)で作成したい</title>
      <link>https://rengotaku.github.io/posts/95e77622-d4bc-464d-8dde-334ac6c6905e/</link>
      <pubDate>Mon, 28 Jan 2019 17:59:20 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/95e77622-d4bc-464d-8dde-334ac6c6905e/</guid>
      <description>def write_csv(filename, data) filepath = &amp;#34;public/#{filename}&amp;#34; Tempfile.create(filename) do |tmpfile| CSV.open(tmpfile.path, &amp;#39;w&amp;#39;) do |csv| csv &amp;lt;&amp;lt; %w(title1 title2 title3) data.each do |d| csv &amp;lt;&amp;lt; d end end # 変換できない文字は?となります File.write( filepath, File.read(tmpfile.path, encoding: &amp;#39;UTF-8&amp;#39;), encoding: Encoding::CP932, invalid: :replace, undef: :replace ) end filepath end 上記は、テンプファイルを作</description>
    </item>
    
    <item>
      <title>指定桁まで0埋めしたい</title>
      <link>https://rengotaku.github.io/posts/ae408920-bcaf-41da-b196-0ee2d23819bb/</link>
      <pubDate>Tue, 22 Jan 2019 18:44:39 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/ae408920-bcaf-41da-b196-0ee2d23819bb/</guid>
      <description>pry(main)&amp;gt; &#39;%04d&#39; % [1] =&amp;gt; &amp;quot;0001&amp;quot; String#%は書式制御 - rubyco（るびこ）の日記</description>
    </item>
    
    <item>
      <title>File.openのパーミッション設定で気をつけること</title>
      <link>https://rengotaku.github.io/posts/0bfd3a71-fd45-4820-829c-6479c674f34a/</link>
      <pubDate>Fri, 11 Jan 2019 19:26:11 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/0bfd3a71-fd45-4820-829c-6479c674f34a/</guid>
      <description>対応 File.open(file_path, &#39;w+b&#39;, 0x644) { |f| f.write file } ===&amp;gt; --w----r-- 1 300807 14K 1 11 19:03 mail_21667_image_0.pdf File.open(file_path, &#39;w+b&#39;, 644) { |f| f.write file } ===&amp;gt; --w----r-- 1 300807 14K 1 11 19:03 mail_21667_image_0.pdf 経緯 初めは、0644と記載していたが、lintの指摘で644に変更し</description>
    </item>
    
    <item>
      <title>sublimeでrubocopを動作させたい</title>
      <link>https://rengotaku.github.io/posts/3670a62b-0146-4ef9-a8b8-da4555ca70fd/</link>
      <pubDate>Fri, 11 Jan 2019 12:18:33 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/3670a62b-0146-4ef9-a8b8-da4555ca70fd/</guid>
      <description>前提 RuboCopの .rubocop.yml はプロジェクトのルートディレクトリ配下に作成済み gemがインストールされている(# gem install rubocop) rubyのインストール場所を確</description>
    </item>
    
    <item>
      <title>原文をgzip圧縮しbase64でエンコードされた文字列の原文を確認したい</title>
      <link>https://rengotaku.github.io/posts/3ca7c0b0-bd99-4bd8-a0a1-b589eb8b920a/</link>
      <pubDate>Thu, 20 Dec 2018 18:59:02 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/3ca7c0b0-bd99-4bd8-a0a1-b589eb8b920a/</guid>
      <description>require &amp;quot;zlib&amp;quot; gzip_char = Base64.decode64(base64_char) begin puts Zlib::Inflate.inflate(gzip_char) rescue Zlib::BufError =&amp;gt; e # 不正な形式のデータの場合 raise &amp;quot;不正な文字列&amp;quot; end phpの gzencode でエンコードされた物も、ちゃんと解凍でき</description>
    </item>
    
    <item>
      <title>yamlファイルに記載した設定をconfigとしてロード</title>
      <link>https://rengotaku.github.io/posts/4a69b6bb-0474-4600-8f72-2ec0ee7efd4b/</link>
      <pubDate>Mon, 17 Dec 2018 12:16:56 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/4a69b6bb-0474-4600-8f72-2ec0ee7efd4b/</guid>
      <description>ロード処理 def load_config(key, filepath) yml = YAML.safe_load(ERB.new(File.read(filepath)).result, [], [], true).symbolize_keys raise &amp;#34;No such file #{filepath}&amp;#34; if yml.blank? config = yml[Rails.env.to_sym] raise &amp;#34;No such environment #{Rails.env}on #{filepath}&amp;#34; if config.blank? Rails.application.config.send(&amp;#34;#{key}=&amp;#34;, ActiveSupport::InheritableOptions.new(config.deep_symbolize_keys)) end load_config(:site_info, Rails.root.join(&amp;#39;config&amp;#39;, &amp;#39;site_info.yml&amp;#39;)) yamlファイルに記載されたrubyの式を展開してロードするよう</description>
    </item>
    
    <item>
      <title>apiのテストケースのサンプル</title>
      <link>https://rengotaku.github.io/posts/7a573d40-4330-42cd-a58d-bf96947f7bc5/</link>
      <pubDate>Wed, 12 Dec 2018 18:30:04 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/7a573d40-4330-42cd-a58d-bf96947f7bc5/</guid>
      <description>require &amp;#39;test_helper&amp;#39; module Api class SampleControllerTest &amp;lt; ActionDispatch::IntegrationTest describe &amp;#34;something function test.&amp;#34; do describe &amp;#34;OK case&amp;#34; do test &amp;#34;exist&amp;#34; do get &amp;#39;/api/v1/sample_contract_mails/1/example&amp;#39;, params: { page: 2 } assert_response :success body = JSON.parse(response.body) assert { body.size == 1 } end end describe &amp;#34;NG case&amp;#34; do test &amp;#34;dont exist&amp;#34; do get &amp;#39;/api/v1/sample_contract_mails/2/example&amp;#39; assert_response :missing end end end end end</description>
    </item>
    
    <item>
      <title>モデルのテストケースのサンプル</title>
      <link>https://rengotaku.github.io/posts/72789551-4a7b-4a54-a6f3-49e1965faf28/</link>
      <pubDate>Wed, 12 Dec 2018 18:26:14 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/72789551-4a7b-4a54-a6f3-49e1965faf28/</guid>
      <description>require &amp;#39;test_helper&amp;#39; class SampleModelTest &amp;lt; ActiveSupport::TestCase describe &amp;#39;something function test.&amp;#39; do test &amp;#39;get something.&amp;#39; do assert { SampleModel.find(1).present? } end test &amp;#39;dont get something.&amp;#39; do assert { SampleModel.find(2).blank? } end end describe &amp;#39;something2 function test.&amp;#39; do before do puts &amp;#34;be executed in something2 only.&amp;#34; end after do puts &amp;#34;be executed in something2 only.&amp;#34; end test &amp;#39;get something.&amp;#39; do assert { SampleModel.find(1).present? } end end end minitest-power_assert のgem</description>
    </item>
    
    <item>
      <title>指定フォルダ配下の1日前のファイルを削除し、空のフォルダを削除したい</title>
      <link>https://rengotaku.github.io/posts/50477c7a-7a7e-4625-a0f1-5935097b8627/</link>
      <pubDate>Wed, 12 Dec 2018 17:10:51 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/50477c7a-7a7e-4625-a0f1-5935097b8627/</guid>
      <description># 1日前のファイルを削除 Dir.glob(&amp;#39;path/to/dir/**/*.*&amp;#39;). select{ |f| File.mtime(f) &amp;lt; Time.now - 1.day }. each{ |f| FileUtils.rm(f) } # 空のフォルダを削除 Dir.glob(&amp;#34;path/to/dir/**&amp;#34;).each do |fo| next unless FileTest.directory?(fo) next unless Dir.entries(fo).length == 2 puts &amp;#34;#{fo}empty&amp;#34; Dir.rmdir fo end [Ruby] 空のフォルダだけ削除、Dir::en</description>
    </item>
    
    <item>
      <title>minitestを実行してもfixtureが実行されずデータが空</title>
      <link>https://rengotaku.github.io/posts/29f18e5f-fadb-43da-b63f-267791e4d3c0/</link>
      <pubDate>Mon, 10 Dec 2018 19:02:14 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/29f18e5f-fadb-43da-b63f-267791e4d3c0/</guid>
      <description>fixtures :all を入れる必要がある。 require File.expand_path(&amp;#39;../../config/environment&amp;#39;, __FILE__) require &amp;#39;rails/test_help&amp;#39; module ActiveSupport class TestCase include FactoryBot::Syntax::Methods include ActiveSupport::Testing::TimeHelpers fixtures :all end end Minitest Tutorial: Getting Started with Minitest | Codeship | via @codeship https://blog.codeship.com/getting-started-with-minitest/</description>
    </item>
    
    <item>
      <title>アップロードされたファイルをBase64にエンコード</title>
      <link>https://rengotaku.github.io/posts/ed21763f-7ee8-4127-a82e-570bb3fa3cb1/</link>
      <pubDate>Mon, 12 Nov 2018 10:49:14 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/ed21763f-7ee8-4127-a82e-570bb3fa3cb1/</guid>
      <description>upload_file = params[:upload_file] base64_image = &amp;#39;data:image/png;base64,&amp;#39; + Base64.strict_encode64(upload_file.read) urlsafe_encode64 は正しく機能しない 表示される文字列をブラウザへ貼り付ける [ruby]irbで画像URLからbase64エンコード画像を作成</description>
    </item>
    
    <item>
      <title>要素のいずれかが真である（ブロッキング記法で書きたい）</title>
      <link>https://rengotaku.github.io/posts/f6ea4016-3b81-4c96-ad3a-68f029c1d07b/</link>
      <pubDate>Thu, 25 Oct 2018 16:51:10 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/f6ea4016-3b81-4c96-ad3a-68f029c1d07b/</guid>
      <description>実現したいこと 複数条件を検証しすべての要素がパスすること。一つでも満たさない要素があればfalseとなる。 ブロッキング記法を使用したい為、検</description>
    </item>
    
    <item>
      <title>Validatorをテスト</title>
      <link>https://rengotaku.github.io/posts/f7766124-b235-4796-a7af-02b44fb666ad/</link>
      <pubDate>Thu, 25 Oct 2018 16:44:10 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/f7766124-b235-4796-a7af-02b44fb666ad/</guid>
      <description>require &amp;#39;test_helper&amp;#39; class TelephoneValidatable include ActiveModel::Model attr_accessor :telephone validates :telephone, telephone: true end class TelephoneValidatorTest &amp;lt; ActiveSupport::TestCase def setup @validator = TelephoneValidatable end valid_telephone_addresses = [&amp;#39;123456789&amp;#39;] invalid_telephone_addresses = [&amp;#39;A123456789Z&amp;#39;] describe &amp;#34;OK case&amp;#34; do test &amp;#39;normal telphone&amp;#39; do validator = @validator.new valid_telephone_addresses.each do |telephone| validator.telephone = telephone assert { validator.valid? } end end end describe &amp;#34;NG case&amp;#34; do test &amp;#39;unnormal telephone&amp;#39; do validator = @validator.new invalid_telephone_addresses.each do |telephone| validator.telephone = telephone</description>
    </item>
    
    <item>
      <title>モデル配列を、キーをid、値をモデルのハッシュに変換</title>
      <link>https://rengotaku.github.io/posts/821546c6-dc95-4071-b1af-9afb8d6ef924/</link>
      <pubDate>Fri, 19 Oct 2018 11:09:12 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/821546c6-dc95-4071-b1af-9afb8d6ef924/</guid>
      <description>searched_models =&amp;gt; [model, model, model] searched_models.map { |models| [models.id, models] }.to_h =&amp;gt; { 1: model, 2: model, 3: model}</description>
    </item>
    
    <item>
      <title>オブジェクトをコピー</title>
      <link>https://rengotaku.github.io/posts/ac48611c-a748-4477-9da4-276fb48b62ed/</link>
      <pubDate>Fri, 05 Oct 2018 16:44:38 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/ac48611c-a748-4477-9da4-276fb48b62ed/</guid>
      <description>class Cat attr_accessor :name def initialize(name) @name = name end end original = Cat.new(&amp;#34;Tama&amp;#34;) copied = original.clone copied.name = &amp;#34;Mike&amp;#34; puts original.name =&amp;gt; &amp;#34;Tama&amp;#34; puts copied.name =&amp;gt; &amp;#34;Mike&amp;#34; clone, dup (Object) - Rubyリファレンス</description>
    </item>
    
    <item>
      <title>半角文字を全角へ</title>
      <link>https://rengotaku.github.io/posts/4afee80f-c733-497f-b0e3-6126c146983e/</link>
      <pubDate>Wed, 26 Sep 2018 11:33:49 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/4afee80f-c733-497f-b0e3-6126c146983e/</guid>
      <description># 半角文字を全角に変換する def convert_half_to_full(param) # 半角カナ param = NKF.nkf(&amp;#39;-Xw&amp;#39;, param) # 半角英数字 param = param.tr(&amp;#39;0-9a-zA-Z&amp;#39;, &amp;#39;０-９ａ-ｚＡ-Ｚ&amp;#39;) # 半角記号 param = param.gsub(/[!&amp;#34;#$%&amp;amp;&amp;#39;()*+,-.\/:;&amp;lt;=&amp;gt;?@\[\]^_`{|}~]+/, &amp;#39;!&amp;#39; =&amp;gt; &amp;#39;！&amp;</description>
    </item>
    
    <item>
      <title>全角数値を半角数値に変換</title>
      <link>https://rengotaku.github.io/posts/0f295ca2-bf16-4fca-8ff2-411c8f49c4a6/</link>
      <pubDate>Thu, 13 Sep 2018 19:50:36 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/0f295ca2-bf16-4fca-8ff2-411c8f49c4a6/</guid>
      <description>NKF.nkf(&#39;-w -Z4&#39;, zen_suuji) # ０００ -&amp;gt; 000 [Ruby] 全角カタカナを半角カタカナに変換する</description>
    </item>
    
    <item>
      <title>Nokogiriでノードを削除</title>
      <link>https://rengotaku.github.io/posts/a1ef4360-134c-45a7-9da4-5fb432a0d54e/</link>
      <pubDate>Mon, 27 Aug 2018 14:56:18 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/a1ef4360-134c-45a7-9da4-5fb432a0d54e/</guid>
      <description># 最初に見つかった &amp;lt;div&amp;gt; を消す doc.at(:div).&amp;amp;remove puts doc puts &amp;quot;-&amp;quot; * 20 # 全ての &amp;lt;br&amp;gt; を消す doc.search(:br).map &amp;amp;:remove puts doc atの場合、存在しない場合はnilが返却される Nokogiri で任意の node を削除する - Secret Garden(Instrumental)</description>
    </item>
    
    <item>
      <title>wheneverでrootパス取得</title>
      <link>https://rengotaku.github.io/posts/333d65ff-998a-4586-931e-ec240b4ef4c4/</link>
      <pubDate>Fri, 17 Aug 2018 12:32:12 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/333d65ff-998a-4586-931e-ec240b4ef4c4/</guid>
      <description>require File.expand_path(File.dirname(__FILE__) + &amp;quot;/environment&amp;quot;) set :output, &amp;quot;#{Rails.root}/log/cron.log&amp;quot; Railsでwheneverを使ってcronを設定する</description>
    </item>
    
    <item>
      <title>bucket内のファイルをフィルターして一覧取得</title>
      <link>https://rengotaku.github.io/posts/629e184e-7d32-4562-85c9-abb408c05410/</link>
      <pubDate>Fri, 17 Aug 2018 10:58:38 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/629e184e-7d32-4562-85c9-abb408c05410/</guid>
      <description>bucket = storage.bucket &amp;#34;bucket_name&amp;#34; files = bucket.files(prefix: &amp;#39;prefix_char/&amp;#39;) files.all do |file| puts file.name end google-cloud-ruby</description>
    </item>
    
    <item>
      <title>キーワード引数</title>
      <link>https://rengotaku.github.io/posts/fb8ad4cd-9463-4795-a759-94de28b6c381/</link>
      <pubDate>Fri, 17 Aug 2018 10:55:55 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/fb8ad4cd-9463-4795-a759-94de28b6c381/</guid>
      <description>対応 bucket.files(prefix: &amp;#39;databases/&amp;#39;) 事象 bucket.files(&amp;#39;databases/&amp;#39;) =&amp;gt; ArgumentError: wrong number of arguments (given 1, expected 0) 該当ソース def files prefix: nil, delimiter: nil, token: nil, max: nil, versions: nil ensure_service! gapi = service.list_files name, prefix: prefix, delimiter: delimiter, token: token, max: max, versions: versions, user_project: user_project File::List.from_gapi gapi, service, name, prefix, delimiter, max, versions, user_project: user_project end Rubyの引数い</description>
    </item>
    
    <item>
      <title>ワンライナーでCSVを扱う</title>
      <link>https://rengotaku.github.io/posts/91a083ff-58ad-46fb-9fab-7fccd0066e52/</link>
      <pubDate>Wed, 15 Aug 2018 17:18:37 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/91a083ff-58ad-46fb-9fab-7fccd0066e52/</guid>
      <description>ruby -rcsv -e&amp;#34;CSV(STDIN).each{|r|p r.join(&amp;#39;,&amp;#39;) if [&amp;#39;400006210&amp;#39;].include? r[0] }&amp;#34; &amp;lt; sample.csv Rubyで標準入力からCSVをパース</description>
    </item>
    
    <item>
      <title>ローカルファイルをアップロード</title>
      <link>https://rengotaku.github.io/posts/29233a99-b730-4d3a-8f39-c0ecae4c9c99/</link>
      <pubDate>Thu, 09 Aug 2018 23:58:53 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/29233a99-b730-4d3a-8f39-c0ecae4c9c99/</guid>
      <description>gemインストール gem &#39;google-cloud-storage&#39; タスク require &amp;#34;google/cloud/storage&amp;#34; namespace :storage do desc &amp;#34;システムDBをGCSにアップロードする&amp;#34; task upload_db: :environment do storage = Google::Cloud::Storage.new( project_id: &amp;#39;project_id&amp;#39;, credentials: &amp;#34;/path/to/jsonfile&amp;#34; ) bucket = storage.bucket ENV[&amp;#39;GCLOUD_STORAGE_BUCKET&amp;#39;] local_file_path = &amp;#34;/path/to/file&amp;#34; storage_file_path =</description>
    </item>
    
    <item>
      <title>dockerのruby2.3.1を2.3.7に変更する</title>
      <link>https://rengotaku.github.io/posts/e0664390-c0cf-41d4-b4db-86dfd3939938/</link>
      <pubDate>Tue, 24 Jul 2018 15:34:43 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/e0664390-c0cf-41d4-b4db-86dfd3939938/</guid>
      <description>Dockerfile 変更後 FROM ruby:2.3.7 RUN apt-get update -qq &amp;amp;&amp;amp; apt-get install -y apt-utils build-essential libpq-dev nodejs qt4-dev-tools libqt4-dev libqtcore4 libqtgui4 libqtwebkit-dev libqtwebkit4 RUN mkdir -p /var WORKDIR /var ENV BUNDLE_JOBS=4 COPY Gemfile Gemfile COPY Gemfile.lock Gemfile.lock RUN bundle install 変更前 FROM ruby:2.3.1 RUN apt-get update -qq &amp;amp;&amp;amp; apt-get install -y apt-utils build-essential libpq-dev nodejs qt4-dev-tools libqt4-dev libqt4-core libqt4-gui RUN mkdir -p /var WORKDIR /var ENV BUNDLE_JOBS=4</description>
    </item>
    
    <item>
      <title>brewでmysqlをインストールしたら、mysqlのgemがインストールできない＆mysqlで何も実行できない</title>
      <link>https://rengotaku.github.io/posts/1e336aa2-3910-47a2-890b-1ce379db42bc/</link>
      <pubDate>Tue, 10 Jul 2018 17:55:00 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/1e336aa2-3910-47a2-890b-1ce379db42bc/</guid>
      <description>gemのインストール対応 バージョン0.4.10を使用する Failed to build gem native extension - unknown type name &amp;lsquo;my_bool&amp;rsquo; · Issue #980 · brianmario/mysql2 mysqlの実行エラー対応 mysql&amp;gt; SET GLOBAL innodb_fast_shutdown = 1; $ mysql_upgrade -u root -p Mysql Error:The</description>
    </item>
    
    <item>
      <title>定数を変更してテスト</title>
      <link>https://rengotaku.github.io/posts/d719f508-6a6b-4b3a-9726-f3e50a37606d/</link>
      <pubDate>Mon, 09 Jul 2018 17:21:21 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/d719f508-6a6b-4b3a-9726-f3e50a37606d/</guid>
      <description>class TargetClass CONSTANT_VARIABLE = %w(1) end TargetClassTest @@origin = TargetClass::CONSTANT_VARIABLE setup do TargetClass.const_set(:CONSTANT_VARIABLE, @@origin) end describe :test do it :one do TargetClass.const_set(:CONSTANT_VARIABLE, w(1, 2, 3)) assert_equal TargetClass::CONSTANT_VARIABLE, %w(1 2 3) end end end 定数を変更すると、別ファイルのテストの際も変更されたままになるので、元に戻</description>
    </item>
    
    <item>
      <title>rubyとrailsのバージョンアップ</title>
      <link>https://rengotaku.github.io/posts/0b8f0eb0-7c73-4a24-a623-a03e8efeda1d/</link>
      <pubDate>Wed, 06 Jun 2018 10:30:06 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/0b8f0eb0-7c73-4a24-a623-a03e8efeda1d/</guid>
      <description>現在のバージョン $ rbenv versions =&amp;gt; system * 2.3.1 (set by /path/to/.rbenv/version) 2.4.1 アップグレード $ brew upgrade rbenv ruby-build 特に ruby-build が更新されないと新しいバージョンが表示されない 使用できるバージョン rbenv install -l</description>
    </item>
    
    <item>
      <title>Rubyワンライナー</title>
      <link>https://rengotaku.github.io/posts/e4c9f397-a4bb-4b9f-aaa5-0871bd7a097c/</link>
      <pubDate>Sun, 06 May 2018 17:03:14 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/e4c9f397-a4bb-4b9f-aaa5-0871bd7a097c/</guid>
      <description>指定フォルダ配下のファイルをリネーム ruby -e &#39;Dir.glob(&amp;quot;/path/to/folder/*.jpg&amp;quot;){|item| File.rename(item, &amp;quot;#{File.dirname(item)}/#{File.basename(item).split(&amp;quot;_&amp;quot;)[1]}_#{File.basename(item).split(&amp;quot;_&amp;quot;)[0]}#{File.extname(item)}&amp;quot;) }&#39; 結果 images/target_img.jpg =&amp;gt; images/img_target.jpg /path/to/folder/*.jpgを変更 img_#{File.basena</description>
    </item>
    
    <item>
      <title>RubyでGoogleplayのレシートを照合する</title>
      <link>https://rengotaku.github.io/posts/79cc8911-a70d-40cd-8090-bf93aa55b1a0/</link>
      <pubDate>Wed, 25 Apr 2018 10:23:13 +0900</pubDate>
      
      <guid>https://rengotaku.github.io/posts/79cc8911-a70d-40cd-8090-bf93aa55b1a0/</guid>
      <description># アンドロイドのレシートチェック def check_receipt_for_android def fetch_receipt_for_android(product_id, purchase_token, token) require &amp;#39;net/http&amp;#39; require &amp;#39;net/https&amp;#39; require &amp;#39;uri&amp;#39; require &amp;#39;json&amp;#39; # path = &amp;#34;https://www.googleapis.com/androidpublisher/v2/applications/#{$ANDROID_PACKAGE_NAME}/purchases/products/#{product_id}/tokens/#{token}&amp;#34; path = &amp;#34;https://www.googleapis.com/androidpublisher/v1.1/applications/#{$ANDROID_PACKAGE_NAME}/inapp/#{product_id}/purchases/#{purchase_token}?access_token=#{token}&amp;#34; uri = URI.parse path https = Net::HTTP.new(uri.host,uri.port) https.use_ssl = true https.verify_mode = OpenSSL::SSL::VERIFY_NONE headers = {} headers[&amp;#34;accept&amp;#34;] = &amp;#34;application/json&amp;#34; headers[&amp;#34;content-type&amp;#34;] = &amp;#34;application/json&amp;#34; # 参考: https://stackoverflow.com/questions/7346398/nethttp-failure-to-access-google-docs-list-data-api https.start do |http| return http.get(uri.request_uri, headers).body</description>
    </item>
    
  </channel>
</rss>
