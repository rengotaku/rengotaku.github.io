<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on Vegetable Programing</title>
    <link>https://www.vegetable.blog.v41.me/tags/go/</link>
    <description>Recent content in go on Vegetable Programing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja_JP</language>
    <copyright>©2018-2020 Vegetable Programing.</copyright>
    <lastBuildDate>Thu, 28 May 2020 10:31:02 +0900</lastBuildDate>
    
	<atom:link href="https://www.vegetable.blog.v41.me/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>golangでランダム値を算出</title>
      <link>https://www.vegetable.blog.v41.me/posts/d5296458-924b-41f2-90fc-346a3840025d/</link>
      <pubDate>Mon, 27 Apr 2020 18:28:34 +0900</pubDate>
      
      <guid>https://www.vegetable.blog.v41.me/posts/d5296458-924b-41f2-90fc-346a3840025d/</guid>
      <description>解決 import ( &amp;#34;math/rand&amp;#34; &amp;#34;time&amp;#34; ) const charset = &amp;#34;abcdefghijklmnopqrstuvwxyz&amp;#34; + &amp;#34;ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&amp;#34; var seededRand *rand.Rand = rand.New( rand.NewSource(time.Now().UnixNano())) func StringWithCharset(length int, charset string) string { b := make([]byte, length) for i := range b { b[i] = charset[seededRand.Intn(len(charset))] } return string(b) } func String(length int) string { return StringWithCharset(length, charset) } Creating Random Strings in Go - Calhoun.io 事象 Rubyの関数のよ</description>
    </item>
    
  </channel>
</rss>